<%- include("../partials/admin/header.ejs") %>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Order Management - Sentique</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', 'Segoe UI', sans-serif;
            background: #f8fafc;
            color: #1e293b;
            min-height: 100vh;
        }

        .main-content {
            margin-left: 240px;
            margin-top: 60px;
            padding: 30px;
            min-height: calc(100vh - 60px);
        }

        /* Header Section */
        .page-header {
            background: linear-gradient(135deg, #1e293b 0%, #334155 100%);
            border-radius: 20px;
            padding: 30px 40px;
            margin-bottom: 30px;
            box-shadow: 0 10px 40px rgba(0, 0, 0, 0.1);
            position: relative;
            overflow: hidden;
        }

        .page-header::before {
            content: '';
            position: absolute;
            top: 0;
            right: 0;
            width: 300px;
            height: 300px;
            background: radial-gradient(circle, rgba(255,255,255,0.1) 0%, transparent 70%);
            border-radius: 50%;
            transform: translate(30%, -30%);
        }

        .header-content {
            display: flex;
            justify-content: space-between;
            align-items: center;
            position: relative;
            z-index: 1;
        }

        .header-left h1 {
            color: white;
            font-size: 32px;
            font-weight: 700;
            margin-bottom: 8px;
            letter-spacing: -0.5px;
        }

        .header-left p {
            color: rgba(255, 255, 255, 0.7);
            font-size: 15px;
        }

        .notification-bell {
            position: relative;
            background: rgba(255, 255, 255, 0.15);
            backdrop-filter: blur(10px);
            width: 56px;
            height: 56px;
            border-radius: 16px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: all 0.3s;
            border: 1px solid rgba(255, 255, 255, 0.1);
        }

        .notification-bell:hover {
            background: rgba(255, 255, 255, 0.25);
            transform: translateY(-2px);
        }

        .notification-bell i {
            font-size: 24px;
            color: white;
        }

        .notification-badge {
            position: absolute;
            top: 8px;
            right: 8px;
            background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);
            color: white;
            width: 22px;
            height: 22px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 11px;
            font-weight: 700;
            border: 2px solid #1e293b;
            animation: pulse 2s infinite;
        }

        @keyframes pulse {
            0%, 100% { transform: scale(1); }
            50% { transform: scale(1.1); }
        }

        /* Stats Cards */
        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .stat-card {
            background: white;
            border-radius: 16px;
            padding: 24px;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.04);
            border: 1px solid #e2e8f0;
            transition: all 0.3s;
        }

        .stat-card:hover {
            transform: translateY(-4px);
            box-shadow: 0 12px 24px rgba(0, 0, 0, 0.08);
        }

        .stat-icon {
            width: 48px;
            height: 48px;
            border-radius: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-bottom: 16px;
            font-size: 20px;
        }

        .stat-icon.total { background: #eff6ff; color: #3b82f6; }
        .stat-icon.delivered { background: #f0fdf4; color: #22c55e; }
        .stat-icon.processing { background: #fef3c7; color: #f59e0b; }
        .stat-icon.cancelled { background: #fee2e2; color: #ef4444; }
        .stat-icon.outfordelivery { background: #e0f2fe; color: #0284c7; }

        .stat-label {
            font-size: 13px;
            color: #64748b;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            margin-bottom: 8px;
            font-weight: 600;
        }

        .stat-value {
            font-size: 32px;
            font-weight: 700;
            color: #0f172a;
        }

        /* Controls */
        .controls-bar {
            background: white;
            border-radius: 16px;
            padding: 20px 30px;
            margin-bottom: 24px;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.04);
            border: 1px solid #e2e8f0;
            display: flex;
            justify-content: space-between;
            align-items: center;
            flex-wrap: wrap;
            gap: 16px;
        }

        .search-box {
            position: relative;
            flex: 1;
            min-width: 250px;
            max-width: 400px;
        }

        .search-box input {
            width: 100%;
            padding: 12px 45px 12px 45px;
            border: 2px solid #e2e8f0;
            border-radius: 12px;
            font-size: 14px;
            transition: all 0.3s;
        }

        .search-box input:focus {
            outline: none;
            border-color: #3b82f6;
            box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
        }

        .search-box i {
            position: absolute;
            left: 16px;
            top: 50%;
            transform: translateY(-50%);
            color: #94a3b8;
        }

        .filter-group {
            display: flex;
            gap: 8px;
            flex-wrap: wrap;
        }

        .filter-btn {
            padding: 10px 20px;
            border: 2px solid #e2e8f0;
            background: white;
            border-radius: 10px;
            font-size: 14px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s;
            color: #475569;
        }

        .filter-btn:hover {
            border-color: #3b82f6;
            color: #3b82f6;
            transform: translateY(-2px);
        }

        .filter-btn.active {
            background: linear-gradient(135deg, #3b82f6 0%, #2563eb 100%);
            color: white;
            border-color: #3b82f6;
        }

        .sort-select {
            padding: 10px 36px 10px 16px;
            border: 2px solid #e2e8f0;
            background: white;
            border-radius: 10px;
            font-size: 14px;
            font-weight: 600;
            cursor: pointer;
            appearance: none;
            background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='12' height='12' viewBox='0 0 12 12'%3E%3Cpath fill='%2364748b' d='M6 9L1 4h10z'/%3E%3C/svg%3E");
            background-repeat: no-repeat;
            background-position: right 12px center;
            color: #475569;
        }

        /* Orders Table */
        .orders-container {
            background: white;
            border-radius: 16px;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.04);
            border: 1px solid #e2e8f0;
            overflow: hidden;
        }

        .table-wrapper {
            overflow-x: auto;
        }

        table {
            width: 100%;
            border-collapse: collapse;
        }

        thead {
            background: #f8fafc;
            border-bottom: 2px solid #e2e8f0;
        }

        thead th {
            padding: 16px 20px;
            text-align: left;
            font-weight: 700;
            font-size: 12px;
            color: #64748b;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        tbody tr {
            border-bottom: 1px solid #f1f5f9;
            transition: all 0.3s;
        }

        tbody tr:hover {
            background: #f8fafc;
        }

        tbody td {
            padding: 20px;
            font-size: 14px;
            color: #334155;
            vertical-align: top;
        }

        .order-id {
            font-weight: 700;
            color: #1e293b;
            font-family: 'Courier New', monospace;
        }

        .customer-info {
            display: flex;
            align-items: center;
            gap: 12px;
        }

        .customer-avatar {
            width: 40px;
            height: 40px;
            border-radius: 10px;
            background: linear-gradient(135deg, #3b82f6 0%, #2563eb 100%);
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: 700;
            font-size: 16px;
        }

        .customer-details h4 {
            font-size: 14px;
            font-weight: 600;
            color: #1e293b;
            margin-bottom: 2px;
        }

        .customer-details p {
            font-size: 12px;
            color: #64748b;
        }

        .products-list {
            display: flex;
            flex-direction: column;
            gap: 12px;
        }

        .product-item {
            display: flex;
            align-items: center;
            gap: 12px;
            padding: 12px;
            background: #f8fafc;
            border-radius: 10px;
            border: 1px solid #e2e8f0;
        }

        .product-image {
            width: 50px;
            height: 50px;
            border-radius: 8px;
            object-fit: cover;
            background: white;
        }

        .product-info {
            flex: 1;
        }

        .product-name {
            font-weight: 600;
            color: #1e293b;
            font-size: 13px;
            margin-bottom: 4px;
        }

        .product-meta {
            font-size: 12px;
            color: #64748b;
        }

        .status-badge {
            padding: 6px 14px;
            border-radius: 8px;
            font-size: 11px;
            font-weight: 700;
            display: inline-block;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .status-Delivered { background: #dcfce7; color: #15803d; }
        .status-Processing { background: #fef3c7; color: #b45309; }
        .status-Cancelled { background: #fee2e2; color: #b91c1c; }
        .status-Pending { background: #e0e7ff; color: #4338ca; }
        .status-Shipped { background: #ddd6fe; color: #6d28d9; }
        .status-OutForDelivery { background: #e0f2fe; color: #0284c7; }
        .status-Active { background: #e0f2fe; color: #0369a1; }
        .status-Returned { background: #fee2e2; color: #b91c1c; }

        .status-select {
            padding: 6px 12px;
            border: 2px solid #e2e8f0;
            background: white;
            border-radius: 8px;
            font-size: 12px;
            font-weight: 600;
            cursor: pointer;
            appearance: none;
            background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='10' height='10' viewBox='0 0 12 12'%3E%3Cpath fill='%2364748b' d='M6 9L1 4h10z'/%3E%3C/svg%3E");
            background-repeat: no-repeat;
            background-position: right 8px center;
            color: #475569;
            transition: all 0.3s;
        }

        .status-select:focus {
            outline: none;
            border-color: #3b82f6;
            box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
        }

        .status-select:hover:not(:disabled) {
            border-color: #3b82f6;
            color: #3b82f6;
        }

        .status-select:disabled {
            background: #e2e8f0;
            color: #94a3b8;
            cursor: not-allowed;
            opacity: 0.6;
        }

        .view-btn {
            background: linear-gradient(135deg, #3b82f6 0%, #2563eb 100%);
            color: white;
            border: none;
            padding: 10px 24px;
            border-radius: 10px;
            font-size: 13px;
            font-weight: 600;
            cursor: pointer;
            display: inline-flex;
            align-items: center;
            gap: 8px;
            transition: all 0.3s;
            box-shadow: 0 4px 12px rgba(59, 130, 246, 0.2);
        }

        .view-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(59, 130, 246, 0.3);
        }

        /* Pagination */
        .pagination-wrapper {
            padding: 24px 30px;
            display: flex;
            justify-content: center;
            align-items: center;
            border-top: 1px solid #e2e8f0;
            gap: 20px;
            flex-wrap: wrap;
        }

        .pagination-info {
            font-size: 14px;
            color: #64748b;
        }

        .pagination {
            display: flex;
            gap: 6px;
            justify-content: center;
        }

        .pagination button {
            padding: 10px 16px;
            border: 2px solid #e2e8f0;
            background: white;
            border-radius: 8px;
            cursor: pointer;
            transition: all 0.3s;
            font-weight: 600;
            color: #475569;
            min-width: 40px;
        }

        .pagination button:hover:not(:disabled) {
            border-color: #3b82f6;
            color: #3b82f6;
            transform: translateY(-2px);
        }

        .pagination button.active {
            background: linear-gradient(135deg, #3b82f6 0%, #2563eb 100%);
            color: white;
            border-color: #3b82f6;
        }

        .pagination button:disabled {
            opacity: 0.4;
            cursor: not-allowed;
        }

        /* Modals */
        .modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background: rgba(15, 23, 42, 0.6);
            backdrop-filter: blur(4px);
            animation: fadeIn 0.3s;
        }

        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }

        .modal-content {
            background: white;
            margin: 3% auto;
            padding: 0;
            border-radius: 20px;
            width: 90%;
            max-width: 700px;
            box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
            animation: slideUp 0.3s;
            max-height: 90vh;
            overflow-y: auto;
        }

        @keyframes slideUp {
            from { transform: translateY(30px); opacity: 0; }
            to { transform: translateY(0); opacity: 1; }
        }

        .modal-header {
            padding: 30px;
            background: linear-gradient(135deg, #1e293b 0%, #334155 100%);
            color: white;
            border-radius: 20px 20px 0 0;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .modal-header h2 {
            font-size: 24px;
            font-weight: 700;
        }

        .close {
            width: 36px;
            height: 36px;
            border-radius: 10px;
            background: rgba(255, 255, 255, 0.1);
            border: none;
            color: white;
            font-size: 24px;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.3s;
        }

        .close:hover {
            background: rgba(255, 255, 255, 0.2);
            transform: rotate(90deg);
        }

        .modal-body {
            padding: 30px;
        }

        .modal-section {
            margin-bottom: 24px;
        }

        .modal-section h3 {
            font-size: 16px;
            font-weight: 700;
            color: #1e293b;
            margin-bottom: 16px;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .detail-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 16px;
        }

        .detail-item {
            background: #f8fafc;
            padding: 16px;
            border-radius: 12px;
            border: 1px solid #e2e8f0;
        }

        .detail-label {
            font-size: 12px;
            color: #64748b;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            margin-bottom: 6px;
            font-weight: 600;
        }

        .detail-value {
            font-size: 14px;
            color: #1e293b;
            font-weight: 600;
        }

        .cancellation-card {
            background: #fff7ed;
            border: 2px solid #fb923c;
            border-radius: 12px;
            padding: 20px;
            margin-bottom: 20px;
        }

        .cancellation-header {
            display: flex;
            align-items: center;
            gap: 12px;
            margin-bottom: 12px;
        }

        .cancellation-icon {
            width: 40px;
            height: 40px;
            border-radius: 10px;
            background: #fb923c;
            color: white;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 18px;
        }

        .action-buttons {
            display: flex;
            gap: 12px;
            margin-top: 16px;
        }

        .btn {
            flex: 1;
            padding: 12px 24px;
            border: none;
            border-radius: 10px;
            font-size: 14px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 8px;
        }

        .btn-approve {
            background: linear-gradient(135deg, #22c55e 0%, #16a34a 100%);
            color: white;
            box-shadow: 0 4px 12px rgba(34, 197, 94, 0.2);
        }

        .btn-approve:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(34, 197, 94, 0.3);
        }

        .btn-reject {
            background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);
            color: white;
            box-shadow: 0 4px 12px rgba(239, 68, 68, 0.2);
        }

        .btn-reject:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(239, 68, 68, 0.3);
        }

        .empty-state {
            text-align: center;
            padding: 60px 20px;
        }

        .empty-icon {
            font-size: 64px;
            color: #cbd5e1;
            margin-bottom: 16px;
        }

        .empty-state h3 {
            font-size: 20px;
            color: #475569;
            margin-bottom: 8px;
        }

        .empty-state p {
            color: #94a3b8;
        }

        /* Responsive */
        @media (max-width: 1200px) {
            .main-content { margin-left: 200px; }
        }

        @media (max-width: 992px) {
            .main-content { margin-left: 0; padding: 20px; }
            .header-content { flex-direction: column; gap: 20px; }
        }

        @media (max-width: 768px) {
            .stats-grid { grid-template-columns: repeat(2, 1fr); }
            .controls-bar { flex-direction: column; }
            .search-box { max-width: 100%; }
            .modal-content { width: 95%; margin: 10% auto; }
            .detail-grid { grid-template-columns: 1fr; }
        }
    </style>
</head>
<body>
    <div class="main-content">
        <!-- Header -->
        <div class="page-header">
            <div class="header-content">
                <div class="header-left">
                    <h1>Order Management</h1>
                    <p>Manage and track all customer orders</p>
                </div>
                <div class="notification-bell" onclick="openCancellationModal()">
                    <i class="fas fa-bell"></i>
                    <% if (pendingCancellations > 0) { %>
                    <span class="notification-badge"><%= pendingCancellations %></span>
                    <% } %>
                </div>
            </div>
        </div>

        <!-- Stats -->
        <div class="stats-grid">
            <div class="stat-card">
                <div class="stat-icon total">
                    <i class="fas fa-shopping-cart"></i>
                </div>
                <div class="stat-label">Total Orders</div>
                <div class="stat-value" id="totalOrders">0</div>
            </div>
            <div class="stat-card">
                <div class="stat-icon delivered">
                    <i class="fas fa-check-circle"></i>
                </div>
                <div class="stat-label">Delivered</div>
                <div class="stat-value" id="deliveredOrders">0</div>
            </div>
            <div class="stat-card">
                <div class="stat-icon processing">
                    <i class="fas fa-clock"></i>
                </div>
                <div class="stat-label">Processing</div>
                <div class="stat-value" id="processingOrders">0</div>
            </div>
            <div class="stat-card">
                <div class="stat-icon cancelled">
                    <i class="fas fa-times-circle"></i>
                </div>
                <div class="stat-label">Cancelled</div>
                <div class="stat-value" id="cancelledOrders">0</div>
            </div>
            <div class="stat-card">
                <div class="stat-icon outfordelivery">
                    <i class="fas fa-truck"></i>
                </div>
                <div class="stat-label">Out for Delivery</div>
                <div class="stat-value" id="outForDeliveryOrders">0</div>
            </div>
        </div>

        <!-- Controls -->
        <div class="controls-bar">
            <div class="search-box">
                <i class="fas fa-search"></i>
                <input type="text" id="searchInput" placeholder="Search by order ID, customer name...">
            </div>
            <div class="filter-group">
                <button class="filter-btn active" data-filter="all">All</button>
                <button class="filter-btn" data-filter="Delivered">Delivered</button>
                <button class="filter-btn" data-filter="Processing">Processing</button>
                <button class="filter-btn" data-filter="OutForDelivery">Out for Delivery</button>
                <button class="filter-btn" data-filter="Cancelled">Cancelled</button>
            </div>
            <select class="sort-select" id="sortSelect">
                <option value="date-desc">Latest First</option>
                <option value="date-asc">Oldest First</option>
                <option value="amount-desc">Highest Amount</option>
                <option value="amount-asc">Lowest Amount</option>
            </select>
        </div>

        <!-- Orders Table -->
        <div class="orders-container">
            <div class="table-wrapper">
                <table>
                    <thead>
                        <tr>
                            <th>Order ID</th>
                            <th>Customer</th>
                            <th>Products</th>
                            <th>Date</th>
                            <th>Amount</th>
                            <th>Status</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody id="orderTableBody">
                        <!-- Populated by JavaScript -->
                    </tbody>
                </table>
            </div>
            <div class="pagination-wrapper">
                <div class="pagination-info" id="paginationInfo">Showing 0 of 0 orders</div>
                <div class="pagination" id="pagination"></div>
            </div>
        </div>
    </div>

    <!-- Order Details Modal -->
    <div id="orderModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h2><i class="fas fa-file-invoice"></i> Order Details</h2>
                <button class="close" onclick="closeOrderModal()">&times;</button>
            </div>
            <div class="modal-body" id="orderModalBody">
                <!-- Populated by JavaScript -->
            </div>
        </div>
    </div>

    <!-- Cancellation Requests Modal -->
    <div id="cancellationModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h2><i class="fas fa-bell"></i> Cancellation Requests</h2>
                <button class="close" onclick="closeCancellationModal()">&times;</button>
            </div>
            <div class="modal-body" id="cancellationModalBody">
                <% if (cancellationRequests && cancellationRequests.length > 0) { %>
                    <% cancellationRequests.forEach(function(request) { %>
                        <div class="cancellation-card">
                            <div class="cancellation-header">
                                <div class="cancellation-icon">
                                    <i class="fas fa-exclamation-triangle"></i>
                                </div>
                                <div>
                                    <h3 style="margin: 0; font-size: 16px;">Order #<%= request.id %></h3>
                                    <p style="margin: 4px 0 0; font-size: 13px; color: #64748b;">
                                        Customer: <%= request.customerName %>
                                    </p>
                                </div>
                            </div>
                            <div style="margin-top: 12px;">
                                <div class="detail-label">Cancellation Reason</div>
                                <div class="detail-value" style="color: #64748b; font-weight: 500;">
                                    <%= request.reason %>
                                </div>
                            </div>
                            <div style="margin-top: 12px;">
                                <div class="detail-label">Products</div>
                                <div style="display: flex; flex-direction: column; gap: 8px; margin-top: 8px;">
                                    <% request.products.forEach(function(product, idx) { %>
                                        <div style="display: flex; align-items: center; gap: 10px; padding: 8px; background: white; border-radius: 8px;">
                                            <img 
                                                src="<%= product.image ? product.image : 'https://via.placeholder.com/40x40?text=No+Image' %>" 
                                                alt="<%= product.product %>" 
                                                style="width: 40px; height: 40px; border-radius: 6px; object-fit: cover; background: #f8fafc;"
                                            />
                                            <div style="flex: 1; font-size: 13px; color: #475569;">
                                                <strong><%= idx + 1 %>. <%= product.product %></strong><br>
                                                <span style="font-size: 12px; color: #94a3b8;">
                                                    <%= product.variant %> • Qty: <%= product.quantity %>
                                                </span>
                                            </div>
                                        </div>
                                    <% }); %>
                                </div>
                            </div>
                            <div style="margin-top: 12px; display: flex; gap: 20px;">
                                <div>
                                    <div class="detail-label">Order Amount</div>
                                    <div class="detail-value">₹<%= request.totalAmount.toFixed(2) %></div>
                                </div>
                                <div>
                                    <div class="detail-label">Request Date</div>
                                    <div class="detail-value" style="font-size: 13px;">
                                        <%= new Date(request.requestDate).toLocaleDateString('en-IN') %>
                                    </div>
                                </div>
                            </div>
                            <div class="action-buttons">
                                <button class="btn btn-approve" onclick="handleCancellation('<%= request.id %>', 'approve')">
                                    <i class="fas fa-check"></i> Approve Cancellation
                                </button>
                                <button class="btn btn-reject" onclick="handleCancellation('<%= request.id %>', 'reject')">
                                    <i class="fas fa-times"></i> Reject Request
                                </button>
                            </div>
                        </div>
                    <% }); %>
                <% } else { %>
                    <div class="empty-state">
                        <div class="empty-icon"><i class="fas fa-check-circle"></i></div>
                        <h3>No Pending Requests</h3>
                        <p>All cancellation requests have been processed</p>
                    </div>
                <% } %>
            </div>
        </div>
    </div>

    <script>
        // Data from backend
        let ordersDatabase = <%- JSON.stringify(orders) %>;
        let filteredOrders = [...ordersDatabase];
        let currentFilter = 'all';
        let currentPage = 1;
        const itemsPerPage = 10;

        // Initialize
        function init() {
            updateStats();
            applyFiltersAndSort();
            attachEventListeners();
        }

        // Update statistics
        function updateStats() {
            const stats = {
                total: ordersDatabase.length,
                delivered: ordersDatabase.filter(o => o.status === 'Delivered').length,
                processing: ordersDatabase.filter(o => o.status === 'Processing').length,
                outfordelivery: ordersDatabase.filter(o => o.status === 'OutForDelivery').length,
                cancelled: ordersDatabase.filter(o => o.status === 'Cancelled').length
            };

            document.getElementById('totalOrders').textContent = stats.total;
            document.getElementById('deliveredOrders').textContent = stats.delivered;
            document.getElementById('processingOrders').textContent = stats.processing;
            document.getElementById('outForDeliveryOrders').textContent = stats.outfordelivery;
            document.getElementById('cancelledOrders').textContent = stats.cancelled;
        }

        // Render table
        function renderTable(orders) {
            const tbody = document.getElementById('orderTableBody');
            
            if (orders.length === 0) {
                tbody.innerHTML = `
                    <tr>
                        <td colspan="7">
                            <div class="empty-state">
                                <div class="empty-icon"><i class="fas fa-search"></i></div>
                                <h3>No orders found</h3>
                                <p>Try adjusting your filters or search criteria</p>
                            </div>
                        </td>
                    </tr>
                `;
                document.getElementById('paginationInfo').textContent = 'Showing 0 of 0 orders';
                document.getElementById('pagination').innerHTML = '';
                return;
            }

            const start = (currentPage - 1) * itemsPerPage;
            const end = start + itemsPerPage;
            const paginatedOrders = orders.slice(start, end);

            tbody.innerHTML = paginatedOrders.map(order => {
                const firstLetter = order.name.charAt(0).toUpperCase();
                const productsHtml = order.products.slice(0, 3).map((p, idx) => `
                    <div class="product-item">
                        <img src="${p.image || 'https://via.placeholder.com/80x80?text=No+Image'}" alt="${p.product}" class="product-image">
                        <div class="product-info">
                            <div class="product-name">${p.product}</div>
                            <div class="product-meta">
                                ${p.variant} • Qty: ${p.quantity} • ₹${p.price.toFixed(2)}
                            </div>
                        </div>
                        <span class="status-badge status-${p.status}">${p.status}</span>
                    </div>
                `).join('');

                const moreProducts = order.products.length > 3 
                    ? `<div style="text-align: center; margin-top: 8px; color: #3b82f6; font-size: 12px; font-weight: 600;">
                        +${order.products.length - 3} more products
                       </div>` 
                    : '';

                return `
                    <tr>
                        <td><span class="order-id">#${order.id}</span></td>
                        <td>
                            <div class="customer-info">
                                <div class="customer-avatar">${firstLetter}</div>
                                <div class="customer-details">
                                    <h4>${order.name}</h4>
                                    <p>${order.address.split(',')[0]}</p>
                                </div>
                            </div>
                        </td>
                        <td>
                            <div class="products-list">
                                ${productsHtml}
                                ${moreProducts}
                            </div>
                        </td>
                        <td>${formatDate(order.date)}</td>
                        <td style="font-weight: 700; color: #1e293b;">₹${order.totalAmount.toFixed(2)}</td>
                        <td><span class="status-badge status-${order.status}">${order.status}</span></td>
                        <td>
                            <button class="view-btn" onclick="viewOrder('${order.id}')">
                                <i class="fas fa-eye"></i> View
                            </button>
                        </td>
                    </tr>
                `;
            }).join('');

            updatePaginationInfo(orders.length, start, end);
            renderPagination(orders.length);
        }

        // Update pagination info
        function updatePaginationInfo(total, start, end) {
            const showing = Math.min(end, total);
            document.getElementById('paginationInfo').textContent = 
                `Showing ${start + 1}-${showing} of ${total} orders`;
        }

        // Render pagination
        function renderPagination(totalItems) {
            const pagination = document.getElementById('pagination');
            const totalPages = Math.ceil(totalItems / itemsPerPage);
            
            if (totalPages <= 1) {
                pagination.innerHTML = '';
                return;
            }

            let html = `
                <button ${currentPage === 1 ? 'disabled' : ''} onclick="changePage(${currentPage - 1})">
                    <i class="fas fa-chevron-left"></i>
                </button>
            `;

            const maxVisible = 5;
            let startPage = Math.max(1, currentPage - Math.floor(maxVisible / 2));
            let endPage = Math.min(totalPages, startPage + maxVisible - 1);

            if (endPage - startPage < maxVisible - 1) {
                startPage = Math.max(1, endPage - maxVisible + 1);
            }

            if (startPage > 1) {
                html += `<button onclick="changePage(1)">1</button>`;
                if (startPage > 2) html += `<button disabled>...</button>`;
            }

            for (let i = startPage; i <= endPage; i++) {
                html += `<button class="${i === currentPage ? 'active' : ''}" onclick="changePage(${i})">${i}</button>`;
            }

            if (endPage < totalPages) {
                if (endPage < totalPages - 1) html += `<button disabled>...</button>`;
                html += `<button onclick="changePage(${totalPages})">${totalPages}</button>`;
            }

            html += `
                <button ${currentPage === totalPages ? 'disabled' : ''} onclick="changePage(${currentPage + 1})">
                    <i class="fas fa-chevron-right"></i>
                </button>
            `;

            pagination.innerHTML = html;
        }

        // Change page
        function changePage(page) {
            currentPage = page;
            renderTable(filteredOrders);
            window.scrollTo({ top: 0, behavior: 'smooth' });
        }

        // Format date
        function formatDate(dateString) {
            const date = new Date(dateString);
            return date.toLocaleDateString('en-IN', { 
                day: '2-digit', 
                month: 'short', 
                year: 'numeric' 
            });
        }

        // Apply filters and sort
        function applyFiltersAndSort() {
            const searchTerm = document.getElementById('searchInput').value.toLowerCase();
            
            filteredOrders = ordersDatabase.filter(order => {
                const matchesFilter = currentFilter === 'all' || order.status === currentFilter;
                const matchesSearch = !searchTerm || 
                    order.id.toLowerCase().includes(searchTerm) ||
                    order.name.toLowerCase().includes(searchTerm) ||
                    order.address.toLowerCase().includes(searchTerm) ||
                    order.products.some(p => p.product.toLowerCase().includes(searchTerm));
                
                return matchesFilter && matchesSearch;
            });

            const sortValue = document.getElementById('sortSelect').value;
            sortOrders(sortValue);
        }

        // Sort orders
        function sortOrders(sortType) {
            const [field, direction] = sortType.split('-');
            
            filteredOrders.sort((a, b) => {
                let comparison = 0;
                
                if (field === 'date') {
                    comparison = new Date(a.date) - new Date(b.date);
                } else if (field === 'amount') {
                    comparison = a.totalAmount - b.totalAmount;
                }
                
                return direction === 'asc' ? comparison : -comparison;
            });
            
            currentPage = 1;
            renderTable(filteredOrders);
        }

        // Attach event listeners
        function attachEventListeners() {
            document.querySelectorAll('.filter-btn').forEach(btn => {
                btn.addEventListener('click', function() {
                    document.querySelectorAll('.filter-btn').forEach(b => b.classList.remove('active'));
                    this.classList.add('active');
                    currentFilter = this.dataset.filter;
                    currentPage = 1;
                    applyFiltersAndSort();
                });
            });

            document.getElementById('searchInput').addEventListener('input', function() {
                currentPage = 1;
                applyFiltersAndSort();
            });

            document.getElementById('sortSelect').addEventListener('change', function() {
                sortOrders(this.value);
            });
        }

        // View order details
        function viewOrder(orderId) {
            const order = ordersDatabase.find(o => o.id === orderId);
            if (!order) return;

            const modalBody = document.getElementById('orderModalBody');
            
            const cancellationHtml = order.cancellationRequest ? `
                <div class="modal-section">
                    <div class="cancellation-card">
                        <div class="cancellation-header">
                            <div class="cancellation-icon">
                                <i class="fas fa-exclamation-triangle"></i>
                            </div>
                            <div>
                                <h4 style="margin: 0;">Cancellation Request</h4>
                                <p style="margin: 4px 0 0; font-size: 13px; color: #64748b;">
                                    Status: ${order.cancellationRequest.status.toUpperCase()}
                                </p>
                            </div>
                        </div>
                        <div style="margin-top: 12px;">
                            <div class="detail-label">Reason</div>
                            <div class="detail-value" style="color: #64748b; font-weight: 500;">
                                ${order.cancellationRequest.reason}
                            </div>
                        </div>
                    </div>
                </div>
            ` : '';

            modalBody.innerHTML = `
                ${cancellationHtml}
                
                <div class="modal-section">
                    <h3><i class="fas fa-info-circle"></i> Order Information</h3>
                    <div class="detail-grid">
                        <div class="detail-item">
                            <div class="detail-label">Order ID</div>
                            <div class="detail-value">#${order.id}</div>
                        </div>
                        <div class="detail-item">
                            <div class="detail-label">Order Date</div>
                            <div class="detail-value">${formatDate(order.date)}</div>
                        </div>
                        <div class="detail-item">
                            <div class="detail-label">Status</div>
                            <div class="detail-value">
                                <span class="status-badge status-${order.status}">${order.status}</span>
                            </div>
                        </div>
                        <div class="detail-item">
                            <div class="detail-label">Payment Method</div>
                            <div class="detail-value">${order.paymentMethod}</div>
                        </div>
                    </div>
                </div>

                <div class="modal-section">
                    <h3><i class="fas fa-user"></i> Customer Details</h3>
                    <div class="detail-grid">
                        <div class="detail-item">
                            <div class="detail-label">Name</div>
                            <div class="detail-value">${order.name}</div>
                        </div>
                        <div class="detail-item">
                            <div class="detail-label">Email</div>
                            <div class="detail-value" style="font-size: 12px;">${order.email}</div>
                        </div>
                        <div class="detail-item">
                            <div class="detail-label">Phone</div>
                            <div class="detail-value">${order.phone}</div>
                        </div>
                        <div class="detail-item" style="grid-column: 1 / -1;">
                            <div class="detail-label">Delivery Address</div>
                            <div class="detail-value" style="font-size: 13px; line-height: 1.6;">
                                ${order.address}
                            </div>
                        </div>
                    </div>
                </div>

                <div class="modal-section">
                    <h3><i class="fas fa-box"></i> Products (${order.products.length})</h3>
                    <div style="display: flex; flex-direction: column; gap: 12px;">
                        ${order.products.map((product, idx) => `
                            <div class="product-item">
                                <img src="${product.image || 'https://via.placeholder.com/80x80?text=No+Image'}" alt="${product.product}" class="product-image">
                                <div class="product-info">
                                    <div class="product-name">${idx + 1}. ${product.product}</div>
                                    <div class="product-meta">
                                        Variant: ${product.variant} | Quantity: ${product.quantity} | Price: ₹${product.price.toFixed(2)}
                                    </div>
                                </div>
                                ${product.status === 'Cancelled' ? `
                                    <span class="status-badge status-${product.status}">${product.status}</span>
                                ` : `
                                    <select class="status-select" onchange="handleStatusChange('${order.id}', '${product.productId}', this.value)" ${product.status === 'Cancelled' ? 'disabled' : ''}>
                                        <option value="Processing" ${product.status === 'Processing' ? 'selected' : ''}>Processing</option>
                                        <option value="Shipped" ${product.status === 'Shipped' ? 'selected' : ''}>Shipped</option>
                                        <option value="OutForDelivery" ${product.status === 'OutForDelivery' ? 'selected' : ''}>Out for Delivery</option>
                                        <option value="Delivered" ${product.status === 'Delivered' ? 'selected' : ''}>Delivered</option>
                                    </select>
                                `}
                            </div>
                        `).join('')}
                    </div>
                </div>

                <div class="modal-section">
                    <h3><i class="fas fa-receipt"></i> Payment Summary</h3>
                    <div class="detail-item">
                        <div style="display: flex; justify-content: space-between; margin-bottom: 12px; padding-bottom: 12px; border-bottom: 1px solid #e2e8f0;">
                            <span style="color: #64748b;">Subtotal</span>
                            <span style="font-weight: 600;">₹${(order.totalAmount + order.discount).toFixed(2)}</span>
                        </div>
                        ${order.discount > 0 ? `
                            <div style="display: flex; justify-content: space-between; margin-bottom: 12px; color: #22c55e;">
                                <span>Discount ${order.couponApplied ? '('+order.couponApplied+')' : ''}</span>
                                <span style="font-weight: 600;">-₹${order.discount.toFixed(2)}</span>
                            </div>
                        ` : ''}
                        <div style="display: flex; justify-content: space-between; padding-top: 12px; border-top: 2px solid #1e293b;">
                            <span style="font-size: 16px; font-weight: 700;">Total Amount</span>
                            <span style="font-size: 18px; font-weight: 700; color: #3b82f6;">₹${order.totalAmount.toFixed(2)}</span>
                        </div>
                    </div>
                </div>
            `;

            document.getElementById('orderModal').style.display = 'block';
        }

        // Handle status change
        async function handleStatusChange(orderId, productId, newStatus) {
            // Prevent setting status to Cancelled
            if (newStatus === 'Cancelled') {
                Swal.fire({
                    icon: 'error',
                    title: 'Invalid Action',
                    text: 'Admins cannot set product status to Cancelled.',
                    confirmButtonColor: '#3b82f6'
                });
                return;
            }

            try {
                const response = await fetch('/admin/orders/update-product-status', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ orderId, productId, status: newStatus })
                });

                const data = await response.json();
                
                if (data.success) {
                    // Update ordersDatabase
                    const order = ordersDatabase.find(o => o.id === orderId);
                    if (order) {
                        const product = order.products.find(p => p.productId === productId);
                        if (product) {
                            product.status = newStatus;
                        }
                        // Update overall order status
                        const allCancelled = order.products.every(p => p.status === 'Cancelled');
                        const allDelivered = order.products.every(p => p.status === 'Delivered');
                        order.status = allCancelled ? 'Cancelled' : allDelivered ? 'Delivered' : 'Processing';
                    }
                    // Update filteredOrders
                    filteredOrders = [...ordersDatabase];
                    applyFiltersAndSort();
                    Swal.fire({
                        icon: 'success',
                        title: 'Success',
                        text: 'Product status updated successfully',
                        confirmButtonColor: '#3b82f6',
                        timer: 1500,
                        showConfirmButton: false
                    });
                    // Refresh the modal to reflect the updated status
                    viewOrder(orderId);
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: data.message,
                        confirmButtonColor: '#3b82f6'
                    });
                }
            } catch (error) {
                console.error('Error updating status:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'An error occurred. Please try again.',
                    confirmButtonColor: '#3b82f6'
                });
            }
        }

        // Modal functions
        function closeOrderModal() {
            document.getElementById('orderModal').style.display = 'none';
        }

        function openCancellationModal() {
            document.getElementById('cancellationModal').style.display = 'block';
        }

        function closeCancellationModal() {
            document.getElementById('cancellationModal').style.display = 'none';
        }

        // Handle cancellation
        async function handleCancellation(orderId, action) {
            if (!confirm(`Are you sure you want to ${action} this cancellation request?`)) {
                return;
            }

            try {
                const endpoint = action === 'approve' ? '/admin/orders/approve-cancellation' : '/admin/orders/reject-cancellation';
                const response = await fetch(endpoint, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ orderId })
                });

                const data = await response.json();
                
                if (data.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Success',
                        text: data.message,
                        confirmButtonColor: '#3b82f6',
                        timer: 1500,
                        showConfirmButton: false
                    }).then(() => {
                        location.reload();
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: data.message,
                        confirmButtonColor: '#3b82f6'
                    });
                }
            } catch (error) {
                console.error('Error:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'An error occurred. Please try again.',
                    confirmButtonColor: '#3b82f6'
                });
            }
        }

        // Close modals on outside click
        window.onclick = function(event) {
            const orderModal = document.getElementById('orderModal');
            const cancellationModal = document.getElementById('cancellationModal');
            
            if (event.target === orderModal) {
                closeOrderModal();
            }
            if (event.target === cancellationModal) {
                closeCancellationModal();
            }
        }

        // Initialize on load
        init();
    </script>
</body>
</html>