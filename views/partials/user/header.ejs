<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">

<style>
/* Top Bar */
.top-bar {
    background-color: #000;
    color: #fff;
    font-size: 14px;
    text-align: center;
    padding: 10px 5px;
}
.top-bar a {
    color: #fff;
    text-decoration: underline;
}

/* Navbar */
.navbar {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 10px;
    border-bottom: 1px solid #ccc;
    position: relative;
    z-index: 500;
}
.nav-logo img {
    width: 120px;
    height: auto;
}
nav.nav-links {
    display: flex;
    gap: 15px;
    align-items: center;
}
nav.nav-links a {
    color: black;
    text-decoration: none;
    font-size: 14px;
}
nav.nav-links a.active {
    font-weight: bold;
    text-decoration: underline;
}

/* Nav Icons */
.nav-icons {
    display: flex;
    align-items: center;
    gap: 15px;
}
.nav-icons a {
    position: relative;
    color: black;
    font-size: 18px;
    text-decoration: none;
    display: flex;
    align-items: center;
    justify-content: center;
}
.nav-icons a:hover {
    transform: scale(1.2);
    transition: transform 0.2s;
}

/* Notification Badge */
.notification-badge {
    position: absolute;
    top: -8px;
    right: -8px;
    background: #ef4444;
    color: white;
    border-radius: 50%;
    width: 18px;
    height: 18px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 11px;
    font-weight: 700;
    border: 2px solid white;
    animation: badgePulse 2s infinite;
}

@keyframes badgePulse {
    0%, 100% {
        transform: scale(1);
    }
    50% {
        transform: scale(1.15);
    }
}

.notification-badge.show {
    display: flex !important;
}

.notification-badge.hide {
    display: none !important;
}

/* Dropdown for user */
.dropdown {
    position: relative;
}
.dropdown .user-icon {
    font-size: 24px;
    cursor: pointer;
}
.dropdown-content {
    display: none;
    position: absolute;
    right: 0;
    background-color: white;
    min-width: 160px;
    box-shadow: 0 8px 16px rgba(0,0,0,0.2);
    z-index: 1000;
    border-radius: 6px;
    overflow: hidden;
}
.dropdown-content a, .dropdown-content div {
    display: block;
    padding: 10px 16px;
    color: black;
    text-decoration: none;
}
.dropdown-content a:hover {
    background-color: #f1f1f1;
}
.dropdown:hover .dropdown-content {
    display: block;
}

/* Hamburger and Mobile Nav */
.hamburger {
    display: none;
    font-size: 22px;
    cursor: pointer;
}
.mobile-nav {
    display: none;
    flex-direction: column;
    gap: 10px;
    background: #fff;
    position: absolute;
    top: 60px;
    left: 0;
    width: 100%;
    padding: 10px 20px;
    border-top: 1px solid #ccc;
    box-shadow: 0 4px 8px rgba(0,0,0,0.1);
}
.mobile-nav a {
    font-size: 14px;
    color: black;
}

/* Responsive */
@media screen and (max-width: 768px) {
    nav.nav-links { display: none; }
    .hamburger { display: block; }
    .nav-icons { margin-top: 10px; width: 100%; justify-content: flex-end; gap: 15px; }
    
    .notification-badge {
        width: 20px;
        height: 20px;
        font-size: 10px;
    }
}
</style>

<!-- Top Bar -->
<div class="top-bar">
    Summer Sale on All Branded Perfumes â€“ Up to 20% Off + Free Express Delivery 
    <a href="/shopPage">Shop Now</a>
</div>

<!-- Navbar -->
<header class="navbar">
    <div class="nav-logo">
        <a href="/home"><img src="/photos/zodiac perfume/brand logo.png" alt="Sentique Logo"></a>
    </div>

    <div class="hamburger" id="hamburger"><i class="fa fa-bars"></i></div>

    <nav class="nav-links" id="navLinks">
        <a href="/home">Home</a>
        <a href="/shopPage">Shop</a>
        <a href="#">Contact</a>
        <a href="/">About</a>
    </nav>

    <div class="nav-icons">
        <!-- Wishlist with Badge -->
        <a href="/wishlist" title="Wishlist" id="wishlistLink">
            <i class="fa fa-heart"></i>
            <span class="notification-badge hide" id="wishlistBadge">0</span>
        </a>

        <!-- Cart with Badge -->
        <a href="/cart" title="Cart" id="cartLink">
            <i class="fa fa-shopping-cart"></i>
            <span class="notification-badge hide" id="cartBadge">0</span>
        </a>

        <% if (user) { %>
        <div class="dropdown">
            <a href="#" class="user-icon"><i class="fa fa-user-circle"></i></a>
            <div class="dropdown-content">
                <div><strong><%= user.name %></strong></div>
                <a href="/profile">Profile</a>
                <a href="/logout">Logout</a>
            </div>
        </div>
        <% } else { %>
        <a href="/login">Login</a>
        <a href="/signup">Sign Up</a>
        <% } %>
    </div>

    <!-- Mobile Nav -->
    <nav class="mobile-nav" id="mobileNav">
        <a href="/home">Home</a>
        <a href="/shopPage">Shop</a>
        <a href="#">Contact</a>
        <a href="#">About</a>
        <% if (!user) { %>
        <a href="/login">Login</a>
        <a href="/signup">Sign Up</a>
        <% } %>
    </nav>
</header>



<script>
// Hamburger Menu
const hamburger = document.getElementById("hamburger");
const mobileNav = document.getElementById("mobileNav");

hamburger && hamburger.addEventListener("click", () => {
    mobileNav.style.display = mobileNav.style.display === "flex" ? "none" : "flex";
});

// ========== DEBUGGING FUNCTIONS ==========
function debugLog(message, data = null) {
    console.log(`[BADGE DEBUG] ${message}`, data || '');
}

// ========== BADGE UPDATE FUNCTIONS ==========
function updateBadges() {
    debugLog('Updating badges...');
    updateCartBadge();
    updateWishlistBadge();
}

function updateCartBadge() {
    debugLog('Fetching cart count...');
    
    fetch('/cart/count')
        .then(res => {
            debugLog('Cart API response status:', res.status);
            if (!res.ok) {
                throw new Error(`HTTP error! status: ${res.status}`);
            }
            return res.json();
        })
        .then(data => {
            debugLog('Cart API response data:', data);
            
            const count = data.count || 0;
            debugLog('Cart count:', count);
            
            const badge = document.getElementById('cartBadge');
            if (!badge) {
                console.error('[ERROR] Cart badge element not found');
                return;
            }
            
            if (count > 0) {
                const displayCount = count > 9 ? '9+' : count;
                badge.textContent = displayCount;
                badge.classList.remove('hide');
                badge.classList.add('show');
                debugLog('Cart badge updated - Count:', displayCount);
            } else {
                badge.classList.remove('show');
                badge.classList.add('hide');
                debugLog('Cart badge hidden - Count is 0');
            }
        })
        .catch(err => {
            console.error('[ERROR] Error fetching cart count:', err);
            debugLog('Cart fetch failed:', err.message);
        });
}

function updateWishlistBadge() {
    debugLog('Fetching wishlist count...');
    
    fetch('/wishlist/count')
        .then(res => {
            debugLog('Wishlist API response status:', res.status);
            if (!res.ok) {
                throw new Error(`HTTP error! status: ${res.status}`);
            }
            return res.json();
        })
        .then(data => {
            debugLog('Wishlist API response data:', data);
            
            const count = data.count || 0;
            debugLog('Wishlist count:', count);
            
            const badge = document.getElementById('wishlistBadge');
            if (!badge) {
                console.error('[ERROR] Wishlist badge element not found');
                return;
            }
            
            if (count > 0) {
                const displayCount = count > 9 ? '9+' : count;
                badge.textContent = displayCount;
                badge.classList.remove('hide');
                badge.classList.add('show');
                debugLog('Wishlist badge updated - Count:', displayCount);
            } else {
                badge.classList.remove('show');
                badge.classList.add('hide');
                debugLog('Wishlist badge hidden - Count is 0');
            }
        })
        .catch(err => {
            console.error('[ERROR] Error fetching wishlist count:', err);
            debugLog('Wishlist fetch failed:', err.message);
        });
}

// Update badges on page load
document.addEventListener('DOMContentLoaded', () => {
    debugLog('DOM loaded - initializing badges');
    updateBadges();
});

// Update badges periodically (every 5 seconds)
setInterval(updateBadges, 1000);

// Update badges when returning to tab
document.addEventListener('visibilitychange', () => {
    if (!document.hidden) {
        debugLog('Page became visible - updating badges');
        updateBadges();
    }
});

debugLog('Badge script loaded successfully');
</script>