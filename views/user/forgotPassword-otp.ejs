<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>OTP Verification</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
            min-height: 100vh;
            display: flex;
            flex-direction: column;
        }

        /* Header Space - Reserved for your header */
        .header-space {
            height: 80px;
            background: rgba(255, 255, 255, 0.9);
            border-bottom: 1px solid #e5e7eb;
            display: flex;
            align-items: center;
            justify-content: center;
            color: #6b7280;
            font-size: 14px;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
        }

        /* Main Content */
        .main-content {
            flex: 1;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 40px 20px;
        }

        .otp-container {
            background: white;
            border-radius: 16px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.08), 0 4px 6px rgba(0, 0, 0, 0.05);
            padding: 50px 40px;
            width: 100%;
            max-width: 450px;
            text-align: center;
            border: 1px solid #f3f4f6;
        }

        .otp-icon {
            width: 80px;
            height: 80px;
            margin: 0 auto 30px;
            background: linear-gradient(135deg, #059669, #047857);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            box-shadow: 0 8px 25px rgba(5, 150, 105, 0.15);
        }

        .otp-icon svg {
            width: 40px;
            height: 40px;
            fill: white;
        }

        .otp-title {
            color: #1f2937;
            font-size: 28px;
            font-weight: 700;
            margin-bottom: 15px;
            letter-spacing: -0.5px;
        }

        .otp-subtitle {
            color: #6b7280;
            font-size: 16px;
            line-height: 1.6;
            margin-bottom: 10px;
        }

        .email-display {
            color: #2563eb;
            font-weight: 600;
            font-size: 16px;
            margin-bottom: 40px;
        }

        .otp-input-container {
            display: flex;
            justify-content: center;
            gap: 12px;
            margin-bottom: 30px;
        }

        .otp-input {
            width: 55px;
            height: 55px;
            border: 2px solid #d1d5db;
            border-radius: 12px;
            text-align: center;
            font-size: 20px;
            font-weight: 600;
            color: #1f2937;
            background: #f9fafb;
            transition: all 0.3s ease;
        }

        .otp-input:focus {
            outline: none;
            border-color: #2563eb;
            background: white;
            box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.1);
            transform: scale(1.05);
        }

        .otp-input.filled {
            border-color: #059669;
            background: #ecfdf5;
            color: #047857;
        }

        .verify-button {
            width: 100%;
            padding: 16px 20px;
            background: linear-gradient(135deg, #2563eb, #1d4ed8);
            color: white;
            border: none;
            border-radius: 12px;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 4px 15px rgba(37, 99, 235, 0.2);
            margin-bottom: 25px;
            opacity: 0.6;
            pointer-events: none;
        }

        .verify-button.active {
            opacity: 1;
            pointer-events: auto;
        }

        .verify-button.active:hover {
            background: linear-gradient(135deg, #1d4ed8, #1e3a8a);
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(37, 99, 235, 0.3);
        }

        .resend-container {
            margin-bottom: 25px;
            color: #6b7280;
            font-size: 14px;
        }

        .resend-button {
            color: #2563eb;
            background: none;
            border: none;
            cursor: pointer;
            font-size: 14px;
            font-weight: 600;
            text-decoration: underline;
            margin-left: 5px;
            transition: color 0.3s ease;
        }

        .resend-button:hover {
            color: #1d4ed8;
        }

        .resend-button:disabled {
            color: #9ca3af;
            cursor: not-allowed;
            text-decoration: none;
        }

        .countdown {
            color: #ef4444;
            font-weight: 600;
        }

        .back-to-email {
            color: #2563eb;
            text-decoration: none;
            font-size: 14px;
            font-weight: 600;
            transition: all 0.3s ease;
        }

        .back-to-email:hover {
            color: #1d4ed8;
            text-decoration: underline;
        }

        .success-message {
            background: #ecfdf5;
            color: #065f46;
            padding: 16px 20px;
            border-radius: 12px;
            margin-bottom: 25px;
            border: 1px solid #a7f3d0;
            display: none;
        }

        .error-message {
            background: #fef2f2;
            color: #991b1b;
            padding: 16px 20px;
            border-radius: 12px;
            margin-bottom: 25px;
            border: 1px solid #fecaca;
            display: none;
        }

        /* Footer Space - Reserved for your footer */
        .footer-space {
            height: 60px;
            background: rgba(255, 255, 255, 0.9);
            border-top: 1px solid #e5e7eb;
            display: flex;
            align-items: center;
            justify-content: center;
            color: #6b7280;
            font-size: 14px;
            box-shadow: 0 -1px 3px rgba(0, 0, 0, 0.05);
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            .otp-container {
                padding: 40px 30px;
                margin: 20px;
            }
            
            .header-space, .footer-space {
                height: 60px;
            }

            .otp-input {
                width: 45px;
                height: 45px;
                font-size: 18px;
            }

            .otp-input-container {
                gap: 8px;
            }
        }

        @media (max-width: 480px) {
            .otp-container {
                padding: 30px 25px;
            }
            
            .otp-title {
                font-size: 24px;
            }

            .otp-input {
                width: 40px;
                height: 40px;
                font-size: 16px;
            }

            .otp-input-container {
                gap: 6px;
            }
        }
    </style>
</head>
<body>


    <!-- Main Content -->
    <div class="main-content">
        <div class="otp-container">
            <div class="otp-icon">
                <svg viewBox="0 0 24 24">
                    <path d="M20,8L12,13L4,8V6L12,11L20,6M20,4H4C2.89,4 2,4.89 2,6V18A2,2 0 0,0 4,20H20A2,2 0 0,0 22,18V6C22,4.89 21.1,4 20,4Z"/>
                </svg>
            </div>
            
            <h1 class="otp-title">Verify Your Email</h1>
            <p class="otp-subtitle">
                We've sent a 4-digit verification code to
            </p>
            <div class="email-display" id="emailDisplay">
                your email address
            </div>

            <div class="success-message" id="successMessage">
                Email verified successfully! Redirecting...
            </div>

            <div class="error-message" id="errorMessage">
                Invalid verification code. Please try again.
            </div>

            <form id="otpForm">
                <div class="otp-input-container">
                    <input type="text" class="otp-input" maxlength="1" data-index="0">
                    <input type="text" class="otp-input" maxlength="1" data-index="1">
                    <input type="text" class="otp-input" maxlength="1" data-index="2">
                    <input type="text" class="otp-input" maxlength="1" data-index="3">
                    
                </div>

                <button type="submit" class="verify-button" id="verifyButton">
                    Verify Code
                </button>
            </form>

            <div class="resend-container">
                Didn't receive the code?
                <button type="button" class="resend-button" id="resendButton">
                    Resend Code
                </button>
                <span class="countdown" id="countdown" style="display: none;"></span>
            </div>

            <a href="#" class="back-to-email" onclick="history.back()">‚Üê Back to Email</a>
        </div>
    </div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>


    <script>
        const otpInputs = document.querySelectorAll('.otp-input');
        const verifyButton = document.getElementById('verifyButton');
        const resendButton = document.getElementById('resendButton');
        const countdown = document.getElementById('countdown');
        const successMessage = document.getElementById('successMessage');
        const errorMessage = document.getElementById('errorMessage');
        const emailDisplay = document.getElementById('emailDisplay');


let resendCountdown = 60;
let countdownInterval;

// Set email from session storage
const verificationEmail = sessionStorage.getItem('verificationEmail');
if (verificationEmail) emailDisplay.textContent = verificationEmail;

// --- OTP Input Handling ---
otpInputs.forEach((input, index) => {
    input.addEventListener('input', e => {
        const val = e.target.value.replace(/\D/g, '');
        e.target.value = val;
        e.target.classList.toggle('filled', !!val);

        if (val && index < otpInputs.length - 1) otpInputs[index + 1].focus();
        toggleVerifyButton();
    });

    input.addEventListener('keydown', e => {
        if (e.key === 'Backspace' && !e.target.value && index > 0) {
            otpInputs[index - 1].focus();
            otpInputs[index - 1].classList.remove('filled');
        }

        // Paste handling
        if ((e.ctrlKey || e.metaKey) && e.key.toLowerCase() === 'v') {
            e.preventDefault();
            navigator.clipboard.readText().then(text => {
                text.replace(/\D/g, '').slice(0, 4).split('').forEach((digit, i) => {
                    if (otpInputs[i]) {
                        otpInputs[i].value = digit;
                        otpInputs[i].classList.add('filled');
                    }
                });
                toggleVerifyButton();
            });
        }
    });

    input.addEventListener('focus', e => e.target.select());
});

function toggleVerifyButton() {
    const allFilled = Array.from(otpInputs).every(input => input.value !== '');
    verifyButton.classList.toggle('active', allFilled);
}

// --- OTP Verification ---
document.getElementById('otpForm').addEventListener('submit', async e => {
    e.preventDefault();
    const otp = Array.from(otpInputs).map(i => i.value).join('');

    if (otp.length !== 4) return Swal.fire({
        icon: 'error',
        title: 'Incomplete OTP',
        text: 'Please enter the complete 4-digit code.'
    });

    try {
        const res = await fetch('/forgotPassword-otp', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ otp })
        });
        const data = await res.json();

        if (data.success) {
            Swal.fire({
                icon: 'success',
                title: 'Verified!',
                text: 'Redirecting...',
                showConfirmButton: false,
                timer: 1500,
                willClose: () => window.location.href = data.redirectUrl
            });
        } else {
            Swal.fire({ icon: 'error', title: 'Invalid OTP', text: data.message });
            clearOtpInputs();
        }
    } catch (err) {
        console.error(err);
        Swal.fire({ icon: 'error', title: 'Error', text: 'Try again later.' });
    }
});

function clearOtpInputs() {
    otpInputs.forEach(input => { input.value = ''; input.classList.remove('filled'); });
    verifyButton.classList.remove('active');
    otpInputs[0].focus();
}

// --- Resend OTP ---
resendButton.addEventListener('click', resendOtp);

async function resendOtp() {
    if (resendCountdown > 0) return;

    startCountdown(60);

    try {
        const res = await fetch('/resend-forgot-otp', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ email: verificationEmail })
        });
        const data = await res.json();

        Swal.fire({
            icon: data.success ? 'success' : 'error',
            title: data.success ? 'OTP Resent!' : 'Failed to Resend OTP',
            text: data.success ? '' : data.message,
            showConfirmButton: false,
            timer: 1500
        });
    } catch (err) {
        console.error(err);
        Swal.fire({ icon: 'error', title: 'Error', text: 'Could not resend OTP.' });
    }
}

// --- Countdown Timer ---


function startCountdown(seconds) {
    resendCountdown = seconds;
    resendButton.disabled = true;
    countdown.style.display = 'inline';  // use countdown here
    countdown.textContent = `(${resendCountdown}s)`;

    clearInterval(countdownInterval);
    countdownInterval = setInterval(() => {
        resendCountdown--;
        countdown.textContent = `(${resendCountdown}s)`;

        if (resendCountdown <= 0) {
            clearInterval(countdownInterval);
            countdown.style.display = 'none';
            resendButton.disabled = false;
        }
    }, 1000);
}

window.addEventListener('load', () => {
    otpInputs[0].focus();
    // Start the countdown immediately
    startCountdown(resendCountdown);
});


    </script>
</body>
</html>