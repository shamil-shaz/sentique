<%- include("../partials/user/header.ejs") %>

<head>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800;900&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', sans-serif;
            background: #f8f9fa;
            min-height: 100vh;
            color: #323e4e;
        }

        .site-wrapper {
            max-width: 1200px;
            margin: 20px auto;
            padding: 0 15px;
        }

        .wishlist-header {
            background: #eceaea;
            border-radius: 12px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
            padding: 20px 24px;
            margin-bottom: 20px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            border: 1px solid #e2e8f0;
        }

        .wishlist-header h1 {
            font-size: 24px;
            font-weight: 600;
            color: #323e4e;
            margin: 0;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .wishlist-header h1 i {
            color: #ea6666;
        }

        .wishlist-count {
            font-size: 14px;
            color: #6b7280;
            font-weight: 500;
        }

        .wishlist-count span {
            color: #ea6666;
            font-weight: 600;
        }

        .move-all-btn {
            padding: 12px 20px;
            background: linear-gradient(135deg, #626362 0%, #363636 100%);
            color: white;
            border: none;
            border-radius: 8px;
            font-size: 14px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.2s ease;
            display: flex;
            align-items: center;
            gap: 8px;
            box-shadow: 0 2px 8px rgba(102, 126, 234, 0.3);
            touch-action: manipulation;
        }

        .move-all-btn:hover {
            transform: translateY(-1px);
            box-shadow: 0 4px 12px rgba(102, 126, 234, 0.4);
        }

        .move-all-btn:disabled {
            opacity: 0.5;
            cursor: not-allowed;
            transform: none;
        }

        .wishlist-grid {
            display: grid;
            grid-template-columns: repeat(4, 1fr);
            gap: 20px;
        }

        .wishlist-card {
            border: 1px solid #9a9898;
            border-radius: 10px;
            overflow: hidden;
            display: flex;
            flex-direction: column;
            background: #e8e7e7;
            transition: all 0.18s ease;
            height: 100%;
        }

        .wishlist-card:hover {
            box-shadow: 0 6px 18px rgba(0, 0, 0, 0.06);
            transform: translateY(-2px);
        }

        .image-wrap {
            width: 100%;
            height: 350px;
            overflow: hidden;
            position: relative;
        }

        .image-wrap img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            display: block;
            transition: transform 0.3s ease;
        }

        .wishlist-card:hover .image-wrap img {
            transform: scale(1.05);
        }

        .product-icons {
            position: absolute;
            top: 8px;
            right: 8px;
            display: flex;
            flex-direction: column;
            gap: 8px;
            z-index: 10;
        }

        .product-icons button {
            background: rgba(255, 255, 255, 0.9);
            border-radius: 50%;
            padding: 10px;
            color: #ea6666;
            font-size: 16px;
            text-align: center;
            transition: all 0.2s ease;
            backdrop-filter: blur(10px);
            border: none;
            cursor: pointer;
            min-width: 40px;
            min-height: 40px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .product-icons button:hover {
            background: #e85105;
            color: #fff;
            transform: scale(1.1);
        }

        .product-body {
            padding: 12px 14px;
            display: flex;
            flex-direction: column;
            gap: 8px;
            flex: 1;
        }

        .product-body h5 {
            margin: 0;
            font-size: 16px;
            line-height: 1.2;
            font-weight: 600;
            color: #323e4e;
        }

        .product-meta {
            display: flex;
            flex-direction: column;
            gap: 6px;
        }

        .product-meta div {
            font-size: 13px;
            color: #0c0c0d;
        }

        .price {
            font-weight: 700;
            font-size: 16px;
            color: #e6623a;
        }

        .old-price {
            text-decoration: line-through;
            color: #535557;
            font-size: 13px;
            margin-left: 8px;
        }

        .discount-badge {
            position: absolute;
            top: 8px;
            left: 8px;
            background: linear-gradient(135deg, #10b981 0%, #059669 100%);
            color: white;
            padding: 6px 12px;
            border-radius: 8px;
            font-size: 12px;
            font-weight: 600;
            box-shadow: 0 2px 8px rgba(16, 185, 129, 0.4);
            z-index: 5;
        }

        .product-actions {
            margin-top: 10px;
            display: flex;
            justify-content: center;
        }

        .add-to-cart-btn {
            width: 100%;
            padding: 12px 16px;
            background: linear-gradient(135deg, #626362 0%, #363636 100%);
            color: white;
            border: none;
            border-radius: 8px;
            font-size: 14px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.2s ease;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 8px;
            box-shadow: 0 2px 8px rgba(102, 126, 234, 0.3);
            touch-action: manipulation;
            min-height: 44px;
        }

        .add-to-cart-btn:hover {
            transform: translateY(-1px);
            box-shadow: 0 4px 12px rgba(102, 126, 234, 0.4);
            background: linear-gradient(135deg, #737473 0%, #464646 100%);
        }

        .add-to-cart-btn:active {
            transform: translateY(0);
            box-shadow: 0 2px 6px rgba(102, 126, 234, 0.2);
        }

        .add-to-cart-btn.disabled {
            opacity: 0.5;
            cursor: not-allowed;
            pointer-events: none;
        }

        .empty-wishlist {
            text-align: center;
            padding: 40px 20px;
            background: #e8e7e7;
            border-radius: 12px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
            margin-top: 20px;
        }

        .empty-icon {
            font-size: 40px;
            margin-bottom: 12px;
            color: #6b7280;
            opacity: 0.5;
        }

        .empty-wishlist h3 {
            font-size: 20px;
            color: #323e4e;
            font-weight: 600;
            margin-bottom: 10px;
        }

        .empty-wishlist p {
            font-size: 13px;
            color: #6b7280;
            margin-bottom: 16px;
        }

        .browse-btn {
            padding: 10px 18px;
            background: linear-gradient(135deg, #626362 0%, #363636 100%);
            color: white;
            border: none;
            border-radius: 8px;
            font-size: 13px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.2s ease;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 8px;
            box-shadow: 0 2px 8px rgba(102, 126, 234, 0.3);
            touch-action: manipulation;
        }

        .browse-btn:hover {
            transform: translateY(-1px);
            box-shadow: 0 4px 12px rgba(102, 126, 234, 0.4);
        }

        .pagination {
            display: flex;
            justify-content: center;
            align-items: center;
            gap: 8px;
            margin-top: 20px;
            padding: 10px 0;
        }

        .pagination a,
        .pagination span {
            padding: 8px 14px;
            border-radius: 8px;
            font-size: 14px;
            font-weight: 500;
            text-decoration: none;
            transition: all 0.2s ease;
            min-width: 36px;
            text-align: center;
        }

        .pagination a {
            background: #eceaea;
            color: #323e4e;
            border: 1px solid #e2e8f0;
            cursor: pointer;
        }

        .pagination a:hover {
            background: #e85105;
            color: white;
            border-color: #e85105;
        }

        .pagination span.current {
            background: #e85105;
            color: white;
            border: 1px solid #e85105;
            font-weight: 600;
        }

        .pagination a.disabled {
            opacity: 0.5;
            cursor: not-allowed;
            pointer-events: none;
        }

        .variant-select {
            padding: 8px;
            border-radius: 8px;
            border: 1px solid #e2e8f0;
            font-size: 13px;
            margin-top: 6px;
            width: 100%;
            background: #fff;
        }

        .variant-select:disabled {
            opacity: 0.5;
            cursor: not-allowed;
        }

        .move-all-btn.loading,
        .product-icons button.loading,
        .add-to-cart-btn.loading {
            position: relative;
            overflow: hidden;
        }

        .move-all-btn.loading::after,
        .product-icons button.loading::after,
        .add-to-cart-btn.loading::after {
            content: '';
            position: absolute;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.4), transparent);
            animation: loading 1.5s infinite;
        }

        @keyframes loading {
            0% { transform: translateX(-100%); }
            100% { transform: translateX(100%); }
        }

        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }

        @keyframes fadeInUp {
            from { opacity: 0; transform: translateY(30px); }
            to { opacity: 1; transform: translateY(0); }
        }

        @keyframes slideDown {
            from { opacity: 0; transform: translateY(-30px); }
            to { opacity: 1; transform: translateY(0); }
        }

        @media (max-width: 1024px) {
            .wishlist-grid {
                grid-template-columns: repeat(2, 1fr);
                gap: 15px;
            }

            .wishlist-header {
                padding: 16px 20px;
            }

            .wishlist-header h1 {
                font-size: 22px;
            }

            .move-all-btn {
                padding: 10px 16px;
                font-size: 13px;
            }

            .pagination a,
            .pagination span {
                padding: 6px 12px;
                font-size: 13px;
            }

            .add-to-cart-btn {
                padding: 10px 14px;
                font-size: 13px;
            }
        }

        @media (max-width: 767px) {
            .site-wrapper {
                padding: 0 10px;
            }

            .wishlist-header {
                flex-direction: column;
                align-items: flex-start;
                gap: 10px;
                padding: 12px 16px;
            }

            .wishlist-header h1 {
                font-size: 18px;
            }

            .wishlist-count {
                font-size: 12px;
            }

            .move-all-btn {
                width: 100%;
                justify-content: center;
                padding: 10px;
                font-size: 12px;
            }

            .wishlist-grid {
                grid-template-columns: 1fr;
                gap: 12px;
            }

            .image-wrap {
                height: 250px;
            }

            .product-body {
                padding: 10px 12px;
            }

            .product-body h5 {
                font-size: 14px;
            }

            .product-meta div {
                font-size: 12px;
            }

            .price {
                font-size: 14px;
            }

            .old-price {
                font-size: 11px;
            }

            .discount-badge {
                padding: 5px 10px;
                font-size: 11px;
            }

            .product-icons button {
                padding: 8px;
                min-width: 36px;
                min-height: 36px;
                font-size: 14px;
            }

            .add-to-cart-btn {
                padding: 8px 12px;
                font-size: 12px;
                min-height: 40px;
            }

            .pagination {
                gap: 6px;
            }

            .pagination a,
            .pagination span {
                padding: 6px 10px;
                font-size: 12px;
                min-width: 32px;
            }
        }

        @media (max-width: 480px) {
            .site-wrapper {
                margin: 10px auto;
            }

            .wishlist-header {
                padding: 10px 12px;
            }

            .wishlist-header h1 {
                font-size: 16px;
            }

            .move-all-btn {
                padding: 8px;
                font-size: 11px;
            }

            .image-wrap {
                height: 200px;
            }

            .product-body {
                padding: 8px 10px;
            }

            .product-body h5 {
                font-size: 13px;
            }

            .product-meta div {
                font-size: 11px;
            }

            .price {
                font-size: 13px;
            }

            .old-price {
                font-size: 10px;
            }

            .add-to-cart-btn {
                padding: 8px 10px;
                font-size: 11px;
                min-height: 36px;
            }

            .pagination a,
            .pagination span {
                padding: 5px 8px;
                font-size: 11px;
            }
        }

        ::-webkit-scrollbar {
            width: 6px;
        }

        ::-webkit-scrollbar-track {
            background: #f1f5f9;
            border-radius: 4px;
        }

        ::-webkit-scrollbar-thumb {
            background: #cbd5e1;
            border-radius: 4px;
        }

        ::-webkit-scrollbar-thumb:hover {
            background: #9ca3af;
        }
    </style>
</head>

<body>
    <div class="site-wrapper">
        <div class="wishlist-header">
            <h1><i class="fa fa-heart"></i> My Wishlist <span class="wishlist-count">(<span id="wishlistCount"><%= totalItems %></span> items)</span></h1>
            <% if(wishlistItems.length > 0) { %>
            <button class="move-all-btn" onclick="moveAllToBag()">
                <i class="fa fa-shopping-cart"></i> Move All to Cart
            </button>
            <% } %>
        </div>

        <div class="wishlist-grid" id="wishlistGrid">
            <% if(wishlistItems.length === 0) { %>
                <div class="empty-wishlist">
                    <div class="empty-icon"><i class="fa fa-heart"></i></div>
                    <h3>Your Wishlist is Empty</h3>
                    <p>Save your favorite items here and never lose track of them!</p>
                    <a href="/shopPage" class="browse-btn">
                        <i class="fa fa-search"></i> Start Shopping
                    </a>
                </div>
            <% } else { %>
                <% wishlistItems.forEach(item => { %>
                <article class="wishlist-card" data-product-id="<%= item.productId && item.productId._id ? item.productId._id : 'unknown' %>">
                    <div class="image-wrap">
                        <a href="/product/<%= item.productId && item.productId._id ? item.productId._id : '#' %>">
                            <img src="<%= item.productId && item.productId.images && item.productId.images[0] ? item.productId.images[0] : 'https://via.placeholder.com/350?text=No+Image' %>" alt="<%= item.productId && item.productId.productName ? item.productId.productName : 'Unknown Product' %>" class="product-image" loading="lazy">
                        </a>
                        <div class="product-icons">
                            <button class="remove-wishlist-btn" data-id="<%= item.productId && item.productId._id ? item.productId._id : 'unknown' %>" aria-label="Remove from wishlist">
                                <i class="fa fa-times"></i>
                            </button>
                        </div>
                        <% if(item.productId && item.productId.discount > 0) { %>
                        <div class="discount-badge"><%= item.productId.discount %>% OFF</div>
                        <% } %>
                    </div>
                    <div class="product-body">
                        <h5><%= item.productId && item.productId.productName ? item.productId.productName : 'Unknown Product' %></h5>
                        <div class="product-meta">
                            <div><strong>Brand:</strong> <%= item.productId && item.productId.brand ? (item.productId.brand.brandName || item.productId.brand || 'No Brand') : 'No Brand' %></div>
                            <div><strong>Category:</strong> <%= item.productId && item.productId.category ? (item.productId.category.name || item.productId.category || 'No Category') : 'No Category' %></div>
                            <div>
                                <% 
                                    let salePrice = 0;
                                    let regularPrice = 0;
                                    let defaultVariantSize = '';
                                    let validVariants = item.productId && item.productId.variants ? item.productId.variants.filter(v => v.size != null && (v.salePrice != null || v.regularPrice != null)) : [];
                                    if (validVariants.length > 0) {
                                        salePrice = Math.min(...validVariants.map(v => v.salePrice || v.regularPrice || 0));
                                        regularPrice = Math.max(...validVariants.map(v => v.regularPrice || 0));
                                        defaultVariantSize = validVariants[0].size;
                                    } else {
                                        salePrice = item.productId && item.productId.salePrice ? item.productId.salePrice : (item.productId && item.productId.price ? item.productId.price : 0);
                                        regularPrice = item.productId && item.productId.price ? item.productId.price : 0;
                                    }
                                %>
                                <span class="price">₹<%= salePrice || 'N/A' %></span>
                                <% if(regularPrice && regularPrice > salePrice) { %>
                                    <span class="old-price">₹<%= regularPrice %></span>
                                <% } %>
                            </div>
                            <% if (validVariants.length > 0) { %>
                                <select class="variant-select" data-product-id="<%= item.productId._id %>" <%= item.productId.stock === 0 ? 'disabled' : '' %>>
                                    <% validVariants.forEach(v => { %>
                                        <option value="<%= v.size %>" <%= v.size === defaultVariantSize ? 'selected' : '' %>><%= v.size %> ml - ₹<%= v.salePrice || v.regularPrice %></option>
                                    <% }) %>
                                </select>
                            <% } else { %>
                                <p style="color: #dc3545; font-size: 12px;">No valid variants available</p>
                            <% } %>
                        </div>
                        <div class="product-actions">
                            <button 
                                class="add-to-cart-btn" 
                                data-id="<%= item.productId._id %>" 
                                data-variant-id="<%= defaultVariantSize || '' %>" 
                                <%= item.productId.stock === 0 || !defaultVariantSize ? 'class="disabled" disabled' : '' %>>
                                <i class="fa fa-shopping-cart"></i> Add to Cart
                            </button>
                        </div>
                    </div>
                </article>
                <% }) %>
            <% } %>
        </div>

        <% if (totalPages > 1) { %>
        <div class="pagination">
            <a href="/wishlist?page=<%= currentPage > 1 ? currentPage - 1 : 1 %>" <%= currentPage === 1 ? 'class="disabled"' : '' %>>Previous</a>
            <% for (let i = 1; i <= totalPages; i++) { %>
                <a href="/wishlist?page=<%= i %>" <%= i === currentPage ? 'class="current"' : '' %>><%= i %></a>
            <% } %>
            <a href="/wishlist?page=<%= currentPage < totalPages ? currentPage + 1 : totalPages %>" <%= currentPage === totalPages ? 'class="disabled"' : '' %>>Next</a>
        </div>
        <% } %>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        // Update data-variant-id when variant is changed
        document.querySelectorAll('.variant-select').forEach(select => {
            select.addEventListener('change', (e) => {
                const productId = e.target.getAttribute('data-product-id');
                const button = document.querySelector(`.add-to-cart-btn[data-id="${productId}"]`);
                console.log('Variant changed:', { productId, selectedVariant: e.target.value });
                if (button) {
                    button.setAttribute('data-variant-id', e.target.value);
                    if (e.target.value) {
                        button.classList.remove('disabled');
                        button.disabled = false;
                    } else {
                        button.classList.add('disabled');
                        button.disabled = true;
                    }
                }
            });
        });

        // Remove item from wishlist
        async function removeFromWishlist(productId, { skipConfirmation = false } = {}) {
            console.log('removeFromWishlist called for productId:', productId, 'skipConfirmation:', skipConfirmation);
            if (!productId || productId === 'unknown') {
                Swal.fire({
                    icon: 'error',
                    title: 'Invalid Product',
                    text: 'Cannot remove item due to invalid product ID.',
                    confirmButtonColor: '#626362'
                });
                return;
            }

            try {
                // Show confirmation dialog only if skipConfirmation is false
                if (!skipConfirmation) {
                    const result = await Swal.fire({
                        title: 'Remove from Wishlist?',
                        text: 'Are you sure you want to remove this item?',
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#e85105',
                        cancelButtonColor: '#626362',
                        confirmButtonText: 'Yes, Remove',
                        cancelButtonText: 'Cancel'
                    });

                    if (!result.isConfirmed) return;
                }

                const res = await fetch(`/wishlist/remove/${productId}`, {
                    method: 'DELETE',
                    headers: { 'Content-Type': 'application/json' }
                });

                const data = await res.json();

                if (data.success) {
                    const card = document.querySelector(`[data-product-id="${productId}"]`);
                    if (card) {
                        card.style.animation = 'fadeOut 0.3s ease';
                        setTimeout(() => {
                            card.remove();
                            updateWishlistCount();
                            if (document.querySelectorAll('.wishlist-card').length === 0) {
                                location.reload();
                            }
                        }, 300);
                    }

                    if (!skipConfirmation) {
                        // Show success message only for manual removal
                        Swal.fire({
                            icon: 'success',
                            title: 'Removed!',
                            text: data.message || 'Item removed from wishlist',
                            showConfirmButton: false,
                            timer: 1500
                        });
                    }
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: data.message || 'Failed to remove item',
                        confirmButtonColor: '#626362'
                    });
                }
            } catch (err) {
                console.error('Remove error:', err);
                Swal.fire({
                    icon: 'error',
                    title: 'Server Error',
                    text: 'Failed to remove item. Please try again.',
                    confirmButtonColor: '#626362'
                });
            }
        }

        // Add item to cart
        async function addToCart(productId, variantSize, button) {
            console.log('addToCart called:', { productId, variantSize });
            if (!productId || productId === 'unknown') {
                Swal.fire({
                    icon: 'error',
                    title: 'Invalid Product',
                    text: 'Cannot add to cart. Missing product.',
                    confirmButtonColor: '#626362'
                });
                return;
            }

            if (!variantSize || isNaN(Number(variantSize))) {
                Swal.fire({
                    icon: 'error',
                    title: 'Select Variant',
                    text: 'Please select a valid variant size.',
                    confirmButtonColor: '#626362'
                });
                return;
            }

            button.classList.add('loading');
            button.disabled = true;

            try {
                const res = await fetch('/cart/add', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ productId, variantSize, quantity: 1 })
                });

                const data = await res.json();

                if (data.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Added to Cart!',
                        showConfirmButton: false,
                        timer: 1500
                    }).then(() => {
                        // Remove from wishlist without confirmation
                        removeFromWishlist(productId, { skipConfirmation: true });
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: data.error || data.message || 'Failed to add to cart',
                        confirmButtonColor: '#626362'
                    });
                }
            } catch (err) {
                console.error('Add to cart error:', err);
                Swal.fire({
                    icon: 'error',
                    title: 'Server Error',
                    text: 'Failed to add to cart. Please try again.',
                    confirmButtonColor: '#626362'
                });
            } finally {
                button.classList.remove('loading');
                button.disabled = false;
            }
        }

        // Move all wishlist items to cart
        async function moveAllToBag() {
            console.log('moveAllToBag called');
            try {
                const result = await Swal.fire({
                    title: 'Move All to Cart?',
                    text: 'Add all wishlist items to your cart?',
                    icon: 'question',
                    showCancelButton: true,
                    confirmButtonColor: '#626362',
                    cancelButtonColor: '#e85105',
                    confirmButtonText: 'Yes, Move All',
                    cancelButtonText: 'Cancel'
                });

                if (!result.isConfirmed) return;

                const res = await fetch('/wishlist/move-all-to-cart', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' }
                });

                const data = await res.json();

                if (data.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Success!',
                        text: data.message || 'All items moved to cart',
                        showConfirmButton: false,
                        timer: 1500
                    }).then(() => {
                        window.location.href = '/cart';
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: data.message || 'Failed to move items',
                        confirmButtonColor: '#626362'
                    });
                }
            } catch (err) {
                console.error('Move all error:', err);
                Swal.fire({
                    icon: 'error',
                    title: 'Server Error',
                    text: 'Failed to move items. Please try again.',
                    confirmButtonColor: '#626362'
                });
            }
        }

        // Update wishlist count
        function updateWishlistCount() {
            const count = document.querySelectorAll('.wishlist-card').length;
            document.getElementById('wishlistCount').textContent = count;
        }

        // Event listeners
        document.querySelectorAll('.remove-wishlist-btn').forEach(button => {
            button.addEventListener('click', (event) => {
                event.stopPropagation();
                const productId = button.getAttribute('data-id');
                console.log('Remove wishlist button clicked:', { productId });
                removeFromWishlist(productId);
            });
        });

        document.querySelectorAll('.add-to-cart-btn').forEach(button => {
            button.addEventListener('click', (event) => {
                event.stopPropagation();
                const productId = button.getAttribute('data-id');
                const variantSize = button.getAttribute('data-variant-id');
                console.log('Add to cart button clicked:', { productId, variantSize });
                addToCart(productId, variantSize, button);
            });
        });

        // FadeOut animation
        const style = document.createElement('style');
        style.textContent = `
            @keyframes fadeOut {
                from { opacity: 1; transform: scale(1); }
                to { opacity: 0; transform: scale(0.9); }
            }
        `;
        document.head.appendChild(style);
    </script>

<%- include("../partials/user/footer.ejs") %>