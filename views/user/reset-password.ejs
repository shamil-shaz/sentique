
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Set New Password</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
            min-height: 100vh;
            display: flex;
            flex-direction: column;
        }

        /* Header Space - Reserved for your header */
        .header-space {
            height: 80px;
            background: rgba(255, 255, 255, 0.9);
            border-bottom: 1px solid #e5e7eb;
            display: flex;
            align-items: center;
            justify-content: center;
            color: #6b7280;
            font-size: 14px;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
        }

        /* Main Content */
        .main-content {
            flex: 1;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 40px 20px;
        }

        .password-container {
            background: white;
            border-radius: 16px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.08), 0 4px 6px rgba(0, 0, 0, 0.05);
            padding: 50px 40px;
            width: 100%;
            max-width: 450px;
            text-align: center;
            border: 1px solid #f3f4f6;
        }

        .password-icon {
            width: 80px;
            height: 80px;
            margin: 0 auto 30px;
            background: linear-gradient(135deg, #7c3aed, #5b21b6);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            box-shadow: 0 8px 25px rgba(124, 58, 237, 0.15);
        }

        .password-icon svg {
            width: 40px;
            height: 40px;
            fill: white;
        }

        .password-title {
            color: #1f2937;
            font-size: 28px;
            font-weight: 700;
            margin-bottom: 15px;
            letter-spacing: -0.5px;
        }

        .password-subtitle {
            color: #6b7280;
            font-size: 16px;
            line-height: 1.6;
            margin-bottom: 40px;
        }

        .form-group {
            margin-bottom: 25px;
            text-align: left;
            position: relative;
        }

        .form-label {
            display: block;
            color: #374151;
            font-size: 14px;
            font-weight: 600;
            margin-bottom: 8px;
        }

        .password-input-container {
            position: relative;
        }

        .form-input {
            width: 100%;
            padding: 16px 50px 16px 20px;
            border: 2px solid #d1d5db;
            border-radius: 12px;
            font-size: 16px;
            transition: all 0.3s ease;
            background: #f9fafb;
            color: #1f2937;
        }

        .form-input:focus {
            outline: none;
            border-color: #2563eb;
            background: white;
            box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.1);
            transform: translateY(-2px);
        }

        .form-input.valid {
            border-color: #059669;
            background: #f0fdf4;
        }

        .form-input.invalid {
            border-color: #ef4444;
            background: #fef2f2;
        }

        .toggle-password {
            position: absolute;
            right: 16px;
            top: 50%;
            transform: translateY(-50%);
            background: none;
            border: none;
            cursor: pointer;
            color: #6b7280;
            transition: color 0.3s ease;
        }

        .toggle-password:hover {
            color: #374151;
        }

        .toggle-password svg {
            width: 20px;
            height: 20px;
        }

        .password-requirements {
            margin-top: 15px;
            padding: 16px;
            background: #f8fafc;
            border-radius: 8px;
            border: 1px solid #e2e8f0;
            text-align: left;
        }

        .requirements-title {
            font-size: 14px;
            font-weight: 600;
            color: #374151;
            margin-bottom: 10px;
        }

        .requirement {
            display: flex;
            align-items: center;
            margin-bottom: 8px;
            font-size: 13px;
            color: #6b7280;
            transition: color 0.3s ease;
        }

        .requirement.met {
            color: #059669;
        }

        .requirement-icon {
            width: 16px;
            height: 16px;
            margin-right: 8px;
            fill: currentColor;
        }

        .password-strength {
            margin-top: 15px;
        }

        .strength-label {
            font-size: 14px;
            font-weight: 600;
            color: #374151;
            margin-bottom: 8px;
            text-align: left;
        }

        .strength-bar {
            height: 8px;
            background: #e5e7eb;
            border-radius: 4px;
            overflow: hidden;
        }

        .strength-fill {
            height: 100%;
            border-radius: 4px;
            transition: all 0.3s ease;
            width: 0%;
        }

        .strength-weak {
            background: #ef4444;
            width: 25%;
        }

        .strength-fair {
            background: #f59e0b;
            width: 50%;
        }

        .strength-good {
            background: #10b981;
            width: 75%;
        }

        .strength-strong {
            background: #059669;
            width: 100%;
        }

        .update-button {
            width: 100%;
            padding: 16px 20px;
            background: linear-gradient(135deg, #2563eb, #1d4ed8);
            color: white;
            border: none;
            border-radius: 12px;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 4px 15px rgba(37, 99, 235, 0.2);
            margin-bottom: 25px;
            opacity: 0.6;
            pointer-events: none;
        }

        .update-button.active {
            opacity: 1;
            pointer-events: auto;
        }

        .update-button.active:hover {
            background: linear-gradient(135deg, #1d4ed8, #1e3a8a);
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(37, 99, 235, 0.3);
        }

        .success-message {
            background: #ecfdf5;
            color: #065f46;
            padding: 16px 20px;
            border-radius: 12px;
            margin-bottom: 25px;
            border: 1px solid #a7f3d0;
            display: none;
        }

        .error-message {
            background: #fef2f2;
            color: #991b1b;
            padding: 16px 20px;
            border-radius: 12px;
            margin-bottom: 25px;
            border: 1px solid #fecaca;
            display: none;
        }

        .back-to-login {
            color: #2563eb;
            text-decoration: none;
            font-size: 14px;
            font-weight: 600;
            transition: all 0.3s ease;
        }

        .back-to-login:hover {
            color: #1d4ed8;
            text-decoration: underline;
        }

        /* Footer Space - Reserved for your footer */
        .footer-space {
            height: 60px;
            background: rgba(255, 255, 255, 0.9);
            border-top: 1px solid #e5e7eb;
            display: flex;
            align-items: center;
            justify-content: center;
            color: #6b7280;
            font-size: 14px;
            box-shadow: 0 -1px 3px rgba(0, 0, 0, 0.05);
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            .password-container {
                padding: 40px 30px;
                margin: 20px;
            }
            
            .header-space, .footer-space {
                height: 60px;
            }
        }

        @media (max-width: 480px) {
            .password-container {
                padding: 30px 25px;
            }
            
            .password-title {
                font-size: 24px;
            }
        }
    </style>
</head>
<body>

    <!-- Main Content -->
    <div class="main-content">
        <div class="password-container">
            <div class="password-icon">
                <svg viewBox="0 0 24 24">
                    <path d="M12,17A2,2 0 0,0 14,15C14,13.89 13.1,13 12,13A2,2 0 0,0 10,15A2,2 0 0,0 12,17M18,8A2,2 0 0,1 20,10V20A2,2 0 0,1 18,22H6A2,2 0 0,1 4,20V10C4,8.89 4.9,8 6,8H7V6A5,5 0 0,1 12,1A5,5 0 0,1 17,6V8H18M12,3A3,3 0 0,0 9,6V8H15V6A3,3 0 0,0 12,3Z"/>
                </svg>
            </div>
            
            <h1 class="password-title">Set New Password</h1>
            <p class="password-subtitle">
                Create a strong password for your account. Make sure it's something you'll remember.
            </p>

            <div class="success-message" id="successMessage">
                Password updated successfully! Redirecting to login...
            </div>

            <div class="error-message" id="errorMessage">
                Passwords do not match. Please try again.
            </div>

            <form id="passwordForm">
                <div class="form-group">
                    <label for="newPassword" class="form-label">New Password</label>
                    <div class="password-input-container">
                        <input 
                            type="password" 
                            id="newPassword" 
                            name="newPassword" 
                            class="form-input" 
                            placeholder="Enter new password"
                            required
                        >
                        <button type="button" class="toggle-password" data-target="newPassword">
                            <svg class="eye-open" viewBox="0 0 24 24">
                                <path d="M12,9A3,3 0 0,0 9,12A3,3 0 0,0 12,15A3,3 0 0,0 15,12A3,3 0 0,0 12,9M12,17A5,5 0 0,1 7,12A5,5 0 0,1 12,7A5,5 0 0,1 17,12A5,5 0 0,1 12,17M12,4.5C7,4.5 2.73,7.61 1,12C2.73,16.39 7,19.5 12,19.5C17,19.5 21.27,16.39 23,12C21.27,7.61 17,4.5 12,4.5Z"/>
                            </svg>
                            <svg class="eye-closed" viewBox="0 0 24 24" style="display: none;">
                                <path d="M11.83,9L15,12.16C15,12.11 15,12.05 15,12A3,3 0 0,0 12,9C11.94,9 11.89,9 11.83,9M7.53,9.8L9.08,11.35C9.03,11.56 9,11.77 9,12A3,3 0 0,0 12,15C12.22,15 12.44,14.97 12.65,14.92L14.2,16.47C13.53,16.8 12.79,17 12,17A5,5 0 0,1 7,12C7,11.21 7.2,10.47 7.53,9.8M2,4.27L4.28,6.55L4.73,7C3.08,8.3 1.78,10 1,12C2.73,16.39 7,19.5 12,19.5C13.55,19.5 15.03,19.2 16.38,18.66L16.81,19.09L19.73,22L21,20.73L3.27,3M12,7A5,5 0 0,1 17,12C17,12.64 16.87,13.26 16.64,13.82L19.57,16.75C21.07,15.5 22.27,13.86 23,12C21.27,7.61 17,4.5 12,4.5C10.6,4.5 9.26,4.75 8,5.2L10.17,7.35C10.76,7.13 11.37,7 12,7Z"/>
                            </svg>
                        </button>
                    </div>
                    
                    <div class="password-requirements">
                        <div class="requirements-title">Password Requirements:</div>
                        <div class="requirement" id="lengthReq">
                            <svg class="requirement-icon" viewBox="0 0 24 24">
                                <path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"/>
                            </svg>
                            At least 8 characters long
                        </div>
                        <div class="requirement" id="uppercaseReq">
                            <svg class="requirement-icon" viewBox="0 0 24 24">
                                <path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"/>
                            </svg>
                            One uppercase letter
                        </div>
                        <div class="requirement" id="lowercaseReq">
                            <svg class="requirement-icon" viewBox="0 0 24 24">
                                <path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"/>
                            </svg>
                            One lowercase letter
                        </div>
                        <div class="requirement" id="numberReq">
                            <svg class="requirement-icon" viewBox="0 0 24 24">
                                <path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"/>
                            </svg>
                            One number
                        </div>
                        <div class="requirement" id="specialReq">
                            <svg class="requirement-icon" viewBox="0 0 24 24">
                                <path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"/>
                            </svg>
                            One special character (@$!%*?&)
                        </div>
                    </div>

                    <div class="password-strength">
                        <div class="strength-label">Password Strength</div>
                        <div class="strength-bar">
                            <div class="strength-fill" id="strengthFill"></div>
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <label for="confirmPassword" class="form-label">Confirm New Password</label>
                    <div class="password-input-container">
                        <input 
                            type="password" 
                            id="confirmPassword" 
                            name="confirmPassword" 
                            class="form-input" 
                            placeholder="Confirm new password"
                            required
                        >
                        <button type="button" class="toggle-password" data-target="confirmPassword">
                            <svg class="eye-open" viewBox="0 0 24 24">
                                <path d="M12,9A3,3 0 0,0 9,12A3,3 0 0,0 12,15A3,3 0 0,0 15,12A3,3 0 0,0 12,9M12,17A5,5 0 0,1 7,12A5,5 0 0,1 12,7A5,5 0 0,1 17,12A5,5 0 0,1 12,17M12,4.5C7,4.5 2.73,7.61 1,12C2.73,16.39 7,19.5 12,19.5C17,19.5 21.27,16.39 23,12C21.27,7.61 17,4.5 12,4.5Z"/>
                            </svg>
                            <svg class="eye-closed" viewBox="0 0 24 24" style="display: none;">
                                <path d="M11.83,9L15,12.16C15,12.11 15,12.05 15,12A3,3 0 0,0 12,9C11.94,9 11.89,9 11.83,9M7.53,9.8L9.08,11.35C9.03,11.56 9,11.77 9,12A3,3 0 0,0 12,15C12.22,15 12.44,14.97 12.65,14.92L14.2,16.47C13.53,16.8 12.79,17 12,17A5,5 0 0,1 7,12C7,11.21 7.2,10.47 7.53,9.8M2,4.27L4.28,6.55L4.73,7C3.08,8.3 1.78,10 1,12C2.73,16.39 7,19.5 12,19.5C13.55,19.5 15.03,19.2 16.38,18.66L16.81,19.09L19.73,22L21,20.73L3.27,3M12,7A5,5 0 0,1 17,12C17,12.64 16.87,13.26 16.64,13.82L19.57,16.75C21.07,15.5 22.27,13.86 23,12C21.27,7.61 17,4.5 12,4.5C10.6,4.5 9.26,4.75 8,5.2L10.17,7.35C10.76,7.13 11.37,7 12,7Z"/>
                            </svg>
                        </button>
                    </div>
                </div>

                <button type="submit" class="update-button" id="updateButton">
                    Update Password
                </button>
            </form>

            <a href="/login" class="back-to-login">← Back to Login</a>
        </div>
    </div>



    <script>
        const newPasswordInput = document.getElementById('newPassword');
        const confirmPasswordInput = document.getElementById('confirmPassword');
        const updateButton = document.getElementById('updateButton');
        const successMessage = document.getElementById('successMessage');
        const errorMessage = document.getElementById('errorMessage');
        const strengthFill = document.getElementById('strengthFill');

        // Password requirements elements
        const requirements = {
            length: document.getElementById('lengthReq'),
            uppercase: document.getElementById('uppercaseReq'),
            lowercase: document.getElementById('lowercaseReq'),
            number: document.getElementById('numberReq'),
            special: document.getElementById('specialReq')
        };

        // Password toggle functionality
        document.querySelectorAll('.toggle-password').forEach(button => {
            button.addEventListener('click', function() {
                const targetId = this.getAttribute('data-target');
                const targetInput = document.getElementById(targetId);
                const eyeOpen = this.querySelector('.eye-open');
                const eyeClosed = this.querySelector('.eye-closed');

                if (targetInput.type === 'password') {
                    targetInput.type = 'text';
                    eyeOpen.style.display = 'none';
                    eyeClosed.style.display = 'block';
                } else {
                    targetInput.type = 'password';
                    eyeOpen.style.display = 'block';
                    eyeClosed.style.display = 'none';
                }
            });
        });

        // Password validation
        function validatePassword(password) {
            const checks = {
                length: password.length >= 8,
                uppercase: /[A-Z]/.test(password),
                lowercase: /[a-z]/.test(password),
                number: /\d/.test(password),
                special: /[@$!%*?&]/.test(password)
            };

            // Update requirement indicators
            Object.keys(checks).forEach(key => {
                if (requirements[key]) {
                    requirements[key].classList.toggle('met', checks[key]);
                }
            });

            return checks;
        }

        function calculateStrength(password) {
            const checks = validatePassword(password);
            const score = Object.values(checks).reduce((sum, check) => sum + (check ? 1 : 0), 0);
            
            // Remove all strength classes
            strengthFill.className = 'strength-fill';
            
            if (score === 0) {
                strengthFill.style.width = '0%';
            } else if (score <= 2) {
                strengthFill.classList.add('strength-weak');
            } else if (score === 3) {
                strengthFill.classList.add('strength-fair');
            } else if (score === 4) {
                strengthFill.classList.add('strength-good');
            } else {
                strengthFill.classList.add('strength-strong');
            }

            return score === 5;
        }

        function checkFormValidity() {
            const password = newPasswordInput.value;
            const confirmPassword = confirmPasswordInput.value;
            
            const isPasswordValid = calculateStrength(password);
            const passwordsMatch = password === confirmPassword && password.length > 0;

            // Update input styling
            newPasswordInput.classList.toggle('valid', isPasswordValid);
            newPasswordInput.classList.toggle('invalid', password.length > 0 && !isPasswordValid);
            
            confirmPasswordInput.classList.toggle('valid', passwordsMatch && isPasswordValid);
            confirmPasswordInput.classList.toggle('invalid', confirmPassword.length > 0 && !passwordsMatch);

            // Enable/disable button
            const isFormValid = isPasswordValid && passwordsMatch;
            updateButton.classList.toggle('active', isFormValid);
        }

        // Event listeners
        newPasswordInput.addEventListener('input', checkFormValidity);
        confirmPasswordInput.addEventListener('input', checkFormValidity);

        // Form submission
       // Form submission
document.getElementById('passwordForm').addEventListener('submit', async function(e) {
    e.preventDefault();

    const password = newPasswordInput.value;
    const confirmPassword = confirmPasswordInput.value;

    hideMessages();

    // Validate passwords match
    if (password !== confirmPassword) {
        showError('Passwords do not match. Please try again.');
        return;
    }

    // Validate password strength
    if (!calculateStrength(password)) {
        showError('Password does not meet all requirements.');
        return;
    }

    try {
        // Call backend API to update password
        const response = await fetch('/reset-password', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
           body: JSON.stringify({ 
    newPassword: newPasswordInput.value, 
    confirmPassword: confirmPasswordInput.value 
})


        });

        const result = await response.json();

        if (result.success) {
            showSuccess();
            setTimeout(() => {
                window.location.href = '/login'; // Redirect to login page
            }, 2000);
        } else {
            showError(result.message || 'Failed to update password.');
        }
    } catch (err) {
        console.error(err);
        showError('Something went wrong. Please try again later.');
    }
});

        function showSuccess() {
            hideMessages();
            successMessage.style.display = 'block';
        }

        function showError(message) {
            hideMessages();
            errorMessage.textContent = message;
            errorMessage.style.display = 'block';
        }

        function hideMessages() {
            successMessage.style.display = 'none';
            errorMessage.style.display = 'none';
        }

        // Auto-focus first input on page load
        window.addEventListener('load', () => {
            newPasswordInput.focus();
        });
    </script>
</body>
