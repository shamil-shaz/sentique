<%- include("../partials/user/header.ejs") %>

<head>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800;900&display=swap" rel="stylesheet">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', sans-serif;
            background: linear-gradient(135deg, #eeeeee 0%, #f5f5f5 50%, #0f3460 100%);
            min-height: 100vh;
            color: #2d3748;
        }

        .main-content {
            display: grid;
            grid-template-columns: 280px 1fr;
            gap: 30px;
            max-width: 1400px;
            margin: 0 auto;
            padding: 40px 20px;
        }

        .edit-content {
            min-width: 0;
            width: 100%;
            animation: fadeInUp 0.6s ease;
        }

        .page-header {
            background: white;
            padding: 30px 40px;
            border-radius: 24px;
            margin-bottom: 30px;
            box-shadow: 0 10px 40px rgba(0, 0, 0, 0.15);
            display: flex;
            justify-content: space-between;
            align-items: center;
            flex-wrap: wrap;
            gap: 20px;
            animation: slideDown 0.6s ease;
        }

        .page-header-left h1 {
            font-size: 32px;
            font-weight: 900;
            color: #1a202c;
            margin-bottom: 8px;
            display: flex;
            align-items: center;
            gap: 12px;
        }

        .page-header-left p {
            font-size: 15px;
            color: #718096;
        }

        .back-btn {
            padding: 14px 28px;
            background: white;
            color: #667eea;
            border: 3px solid #667eea;
            border-radius: 14px;
            font-size: 15px;
            font-weight: 800;
            cursor: pointer;
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            display: flex;
            align-items: center;
            gap: 10px;
            text-decoration: none;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .back-btn:hover {
            background: #f7fafc;
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(102, 126, 234, 0.3);
        }

        .edit-form-container {
            background: white;
            border-radius: 24px;
            padding: 45px;
            box-shadow: 0 10px 40px rgba(0, 0, 0, 0.15);
            animation: slideUp 0.6s ease;
        }

        .form-header {
            margin-bottom: 35px;
            padding-bottom: 25px;
            border-bottom: 4px solid #f0f0f0;
        }

        .form-header h2 {
            font-size: 26px;
            font-weight: 900;
            color: #1a202c;
            display: flex;
            align-items: center;
            gap: 12px;
            margin-bottom: 10px;
        }

        .form-header p {
            font-size: 15px;
            color: #718096;
            font-weight: 600;
        }

        .form-group {
            margin-bottom: 28px;
        }

        .form-label {
            font-size: 15px;
            font-weight: 800;
            color: #4a5568;
            margin-bottom: 12px;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .form-input,
        .form-select,
        .form-textarea {
            width: 100%;
            padding: 18px 22px;
            border: 3px solid #e2e8f0;
            border-radius: 14px;
            font-family: 'Inter', sans-serif;
            font-size: 15px;
            transition: all 0.3s;
            background: #f9fafb;
            font-weight: 600;
        }

        .form-input:focus,
        .form-select:focus,
        .form-textarea:focus {
            outline: none;
            border-color: #667eea;
            background: white;
            box-shadow: 0 0 0 5px rgba(102, 126, 234, 0.15);
            transform: translateY(-2px);
        }

        .form-textarea {
            resize: vertical;
            min-height: 110px;
        }

        .form-row {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 22px;
        }

        .checkbox-group {
            display: flex;
            align-items: center;
            gap: 15px;
            padding: 20px;
            background: linear-gradient(135deg, #f9fafb 0%, #f0f4f8 100%);
            border-radius: 14px;
            border: 3px solid #e2e8f0;
            cursor: pointer;
            transition: all 0.3s;
        }

        .checkbox-group:hover {
            border-color: #667eea;
            background: linear-gradient(135deg, white 0%, #f7faff 100%);
            transform: translateX(5px);
        }

        .checkbox-group input[type="checkbox"] {
            width: 26px;
            height: 26px;
            cursor: pointer;
            accent-color: #667eea;
        }

        .checkbox-group label {
            font-size: 16px;
            font-weight: 700;
            color: #2d3748;
            cursor: pointer;
        }

        .form-actions {
            display: flex;
            gap: 18px;
            margin-top: 40px;
            padding-top: 35px;
            border-top: 3px solid #f0f0f0;
        }

        .form-btn {
            flex: 1;
            padding: 18px 36px;
            border-radius: 14px;
            font-size: 17px;
            font-weight: 800;
            cursor: pointer;
            transition: all 0.3s;
            border: none;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 10px;
        }

        .btn-submit {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            box-shadow: 0 8px 25px rgba(102, 126, 234, 0.4);
        }

        .btn-submit:hover {
            transform: translateY(-3px);
            box-shadow: 0 12px 35px rgba(102, 126, 234, 0.5);
        }

        .btn-submit:disabled {
            opacity: 0.6;
            cursor: not-allowed;
            transform: none;
        }

        .btn-cancel {
            background: white;
            color: #667eea;
            border: 3px solid #667eea;
            text-decoration: none;
        }

        .btn-cancel:hover {
            background: #f7fafc;
            transform: translateY(-2px);
        }

        .loading-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.7);
            backdrop-filter: blur(8px);
            display: none;
            align-items: center;
            justify-content: center;
            z-index: 9999;
        }

        .loading-overlay.show {
            display: flex;
        }

        .loading-spinner {
            width: 60px;
            height: 60px;
            border: 5px solid rgba(255, 255, 255, 0.3);
            border-top: 5px solid #667eea;
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }

        @keyframes slideUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        @keyframes slideDown {
            from {
                opacity: 0;
                transform: translateY(-30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        /* RESPONSIVE DESIGN */
        @media (max-width: 1024px) {
            .main-content {
                grid-template-columns: 250px 1fr;
                gap: 25px;
            }
        }

        @media (max-width: 868px) {
            .main-content {
                grid-template-columns: 1fr;
                gap: 20px;
            }

            .page-header {
                flex-direction: column;
                align-items: flex-start;
            }

            .back-btn {
                width: 100%;
                justify-content: center;
            }

            .edit-form-container {
                padding: 35px 28px;
            }

            .form-row {
                grid-template-columns: 1fr;
            }

            .form-actions {
                flex-direction: column;
            }
        }

        @media (max-width: 640px) {
            .main-content {
                padding: 25px 15px;
            }

            .page-header {
                padding: 25px;
            }

            .page-header-left h1 {
                font-size: 26px;
            }

            .edit-form-container {
                padding: 30px 20px;
            }

            .form-header h2 {
                font-size: 22px;
            }
        }

        @media (max-width: 480px) {
            .page-header-left h1 {
                font-size: 22px;
            }

            .back-btn {
                font-size: 14px;
                padding: 12px 24px;
            }
        }

        /* Scrollbar Styling */
        ::-webkit-scrollbar {
            width: 12px;
        }

        ::-webkit-scrollbar-track {
            background: #f1f1f1;
            border-radius: 10px;
        }

        ::-webkit-scrollbar-thumb {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border-radius: 10px;
        }

        ::-webkit-scrollbar-thumb:hover {
            background: linear-gradient(135deg, #5568d3 0%, #6a3f8f 100%);
        }
    </style>
</head>

<body>
    <div class="main-content">
        <%- include("../partials/user/profile-sidebar.ejs", { user: user, activePage: 'address' }) %>

        <div class="edit-content">
            <div class="page-header">
                <div class="page-header-left">
                    <h1>✏️ Edit Address</h1>
                    <p>Update your address details</p>
                </div>
                <a href="/profile/address" class="back-btn">
                    ← Back to Addresses
                </a>
            </div>

            <div class="edit-form-container">
                <div class="form-header">
                    <h2>📝 Address Information</h2>
                    <p>Modify the fields you want to update</p>
                </div>

                <form id="editAddressForm" onsubmit="updateAddress(event)">
                    <input type="hidden" id="addressId" value="<%= address._id %>">

                    <div class="form-group">
                        <label class="form-label">🏷️ Address Type</label>
                        <select class="form-select" name="addressType" id="type" required>
                            <option value="" disabled>Select address type</option>
                            <option value="Home" <%= address.addressType === 'Home' ? 'selected' : '' %>>🏠 Home</option>
                            <option value="Work" <%= address.addressType === 'Work' ? 'selected' : '' %>>🏢 Work</option>
                            <option value="Other" <%= address.addressType === 'Other' ? 'selected' : '' %>>📦 Other</option>
                        </select>
                    </div>

                    <div class="form-row">
                        <div class="form-group">
                            <label class="form-label">👤 Full Name</label>
                            <input type="text" class="form-input" name="name" id="name" value="<%= address.name %>" placeholder="Enter full name" required minlength="3">
                        </div>
                        <div class="form-group">
                            <label class="form-label">📱 Phone Number</label>
                            <input type="tel" class="form-input" name="phone" id="phone" value="<%= address.phone %>" placeholder="Enter 10 digit number" required pattern="[0-9]{10}">
                        </div>
                    </div>

                    <div class="form-row">
                        <div class="form-group">
                            <label class="form-label">🏠 House/Building Name</label>
                            <input type="text" class="form-input" name="houseName" id="houseName" value="<%= address.houseName %>" placeholder="Enter house/building name" required minlength="2">
                        </div>
                        <div class="form-group">
                            <label class="form-label">🔢 Building Number <span style="font-size: 12px; color: #718096; font-weight: 500;">(Optional)</span></label>
                            <input type="text" class="form-input" name="buildingNumber" id="buildingNumber" value="<%= address.buildingNumber || '' %>" placeholder="Enter building number (optional)">
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="form-label">🏘️ Landmark</label>
                        <textarea class="form-textarea" name="landmark" id="landmark" placeholder="Nearby landmark or reference" required minlength="3"><%= address.landmark %></textarea>
                    </div>

                    <div class="form-row">
                        <div class="form-group">
                            <label class="form-label">☎️ Alternative Number <span style="font-size: 12px; color: #718096; font-weight: 500;">(Optional)</span></label>
                            <input type="tel" class="form-input" name="altPhone" id="altPhone" value="<%= address.altPhone || '' %>" placeholder="Enter 10 digit number (optional)">
                        </div>
                        <div class="form-group">
                            <label class="form-label">🌍 Nationality</label>
                            <input type="text" class="form-input" name="nationality" id="nationality" value="<%= address.nationality %>" placeholder="Enter nationality" required minlength="2">
                        </div>
                    </div>

                    <div class="form-row">
                        <div class="form-group">
                            <label class="form-label">🏙️ City</label>
                            <input type="text" class="form-input" name="city" id="city" value="<%= address.city %>" placeholder="Enter city" required>
                        </div>
                        <div class="form-group">
                            <label class="form-label">🗺️ State</label>
                            <input type="text" class="form-input" name="state" id="state" value="<%= address.state %>" placeholder="Enter state" required>
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="form-label">📮 ZIP Code</label>
                        <input type="text" class="form-input" name="pincode" id="zip" value="<%= address.pincode %>" placeholder="Enter ZIP code" required>
                    </div>

                    <div class="form-group">
                        <div class="checkbox-group">
                            <input type="checkbox" id="setDefault" name="isDefault" <%= address.isDefault ? 'checked' : '' %>>
                            <label for="setDefault">⭐ Set as default address</label>
                        </div>
                    </div>

                    <div class="form-actions">
                        <a href="/profile/address" class="form-btn btn-cancel">Cancel</a>
                        <button type="submit" class="form-btn btn-submit" id="submitBtn">
                            💾 Update Address
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Loading Overlay -->
    <div class="loading-overlay" id="loadingOverlay">
        <div class="loading-spinner"></div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        async function updateAddress(e) {
            e.preventDefault();

            const submitBtn = document.getElementById('submitBtn');
            const loadingOverlay = document.getElementById('loadingOverlay');
            
            submitBtn.disabled = true;
            submitBtn.innerHTML = '⏳ Updating...';
            loadingOverlay.classList.add('show');

            const addressId = document.getElementById('addressId').value;
            const payload = {
                id: addressId,
                addressType: document.getElementById('type').value.trim(),
                name: document.getElementById('name').value.trim(),
                phone: document.getElementById('phone').value.trim(),
                houseName: document.getElementById('houseName').value.trim(),
                buildingNumber: document.getElementById('buildingNumber').value.trim(),
                landmark: document.getElementById('landmark').value.trim(),
                altPhone: document.getElementById('altPhone').value.trim(),
                nationality: document.getElementById('nationality').value.trim(),
                city: document.getElementById('city').value.trim(),
                state: document.getElementById('state').value.trim(),
                pincode: document.getElementById('zip').value.trim(),
                isDefault: document.getElementById('setDefault').checked
            };

            // Client-side validation
            if (!payload.addressType || !['Home', 'Work', 'Other'].includes(payload.addressType)) {
                resetButton();
                return showError('Invalid Input', 'Please select a valid address type (Home, Work, Other)');
            }
            if (payload.name.length < 3) {
                resetButton();
                return showError('Invalid Name', 'Name must be at least 3 characters long');
            }
            if (!/^\d{10}$/.test(payload.phone)) {
                resetButton();
                return showError('Invalid Phone', 'Phone number must be exactly 10 digits');
            }
            if (payload.houseName.length < 2) {
                resetButton();
                return showError('Invalid House Name', 'House/Building name must be at least 2 characters');
            }
            if (payload.landmark.length < 3) {
                resetButton();
                return showError('Invalid Landmark', 'Landmark must be at least 3 characters');
            }
            if (payload.altPhone && !/^\d{10}$/.test(payload.altPhone)) {
                resetButton();
                return showError('Invalid Alternative Number', 'Alternative number must be exactly 10 digits');
            }
            if (payload.nationality.length < 2) {
                resetButton();
                return showError('Invalid Nationality', 'Nationality must be at least 2 characters');
            }
            if (!payload.city || !payload.state || !payload.pincode) {
                resetButton();
                return showError('Missing Information', 'City, state, and ZIP code are required');
            }

            try {
                const res = await fetch('/addresses/edit', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(payload)
                });

                const data = await res.json();

                if (data.success) {
                    await Swal.fire({
                        icon: 'success',
                        title: 'Success!',
                        text: data.message || 'Address updated successfully',
                        confirmButtonColor: '#667eea',
                        timer: 2000,
                        showConfirmButton: false
                    });
                    window.location.href = '/profile/address';
                } else {
                    resetButton();
                    showError('Error', data.message || 'Failed to update address');
                }
            } catch (err) {
                console.error('Update error:', err);
                resetButton();
                showError('Server Error', 'Failed to update address. Please try again.');
            }
        }

        function resetButton() {
            const submitBtn = document.getElementById('submitBtn');
            const loadingOverlay = document.getElementById('loadingOverlay');
            submitBtn.disabled = false;
            submitBtn.innerHTML = '💾 Update Address';
            loadingOverlay.classList.remove('show');
        }

        function showError(title, text) {
            Swal.fire({
                icon: 'error',
                title: title,
                text: text,
                confirmButtonColor: '#667eea'
            });
        }
    </script>

<%- include("../partials/user/footer.ejs") %>